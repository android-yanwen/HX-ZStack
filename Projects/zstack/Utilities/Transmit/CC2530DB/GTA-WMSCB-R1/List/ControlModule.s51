///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.20.2.41139 for 8051            18/Aug/2016  20:06:29 /
// Copyright 2004-2013 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//                                                                            /
//    Source file        =  D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Projects\zs /
//                          tack\Utilities\Transmit\Source\ControlModule.c    /
//    Command line       =  -f D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Projects /
//                          \zstack\Utilities\Transmit\CC2530DB\..\..\..\Tool /
//                          s\CC2530DB\f8wEndev.cfg (-DCPU32MHZ               /
//                          -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3        /
//                          -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f         /
//                          D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Projects\zs /
//                          tack\Utilities\Transmit\CC2530DB\..\..\..\Tools\C /
//                          C2530DB\f8wConfig.cfg (-DZIGBEEPRO -DSECURE=0     /
//                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                 /
//                          -DDEFAULT_CHANLIST=0x00001000                     /
//                          -DZDAPP_CONFIG_PAN_ID=0x1178                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=3           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=2   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=TRUE -DPOLL_RATE=1000        /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 D:\work\ZSTACK-GTAMODBUS-v /
//                          1.0£¨Û³ÎÄ£©\Projects\zstack\Utilities\Transmit\So /
//                          urce\ControlModule.c -D xNWK_AUTO_POLL -D         /
//                          xMT_TASK -D xZTOOL_P1 -D xMT_SYS_FUNC -D          /
//                          xMT_ZDO_FUNC -D ZDNWKMGR_MIN_TRANSMISSIONS=0 -D   /
//                          xGTA_DEBUG -D ZIGBEEPRO -D GTA_WMSCB_R1 -lC       /
//                          D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Projects\zs /
//                          tack\Utilities\Transmit\CC2530DB\GTA-WMSCB-R1\Lis /
//                          t\ -lA D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Proj /
//                          ects\zstack\Utilities\Transmit\CC2530DB\GTA-WMSCB /
//                          -R1\List\ --diag_suppress Pe001,Pa010 -o          /
//                          D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Projects\zs /
//                          tack\Utilities\Transmit\CC2530DB\GTA-WMSCB-R1\Obj /
//                          \ -e --no_code_motion --debug --core=plain        /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Projects\zs /
//                          tack\Utilities\Transmit\CC2530DB\ -I              /
//                          D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Projects\zs /
//                          tack\Utilities\Transmit\CC2530DB\..\Source\ -I    /
//                          D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Projects\zs /
//                          tack\Utilities\Transmit\CC2530DB\..\..\..\ZMain\T /
//                          I2530DB\ -I D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£© /
//                          \Projects\zstack\Utilities\Transmit\CC2530DB\..\. /
//                          .\..\..\..\Components\hal\include\ -I             /
//                          D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Projects\zs /
//                          tack\Utilities\Transmit\CC2530DB\..\..\..\..\..\C /
//                          omponents\hal\target\CC2530EB\ -I                 /
//                          D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Projects\zs /
//                          tack\Utilities\Transmit\CC2530DB\..\..\..\..\..\C /
//                          omponents\mac\include\ -I                         /
//                          D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Projects\zs /
//                          tack\Utilities\Transmit\CC2530DB\..\..\..\..\..\C /
//                          omponents\mac\high_level\ -I                      /
//                          D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Projects\zs /
//                          tack\Utilities\Transmit\CC2530DB\..\..\..\..\..\C /
//                          omponents\mac\low_level\srf04\ -I                 /
//                          D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Projects\zs /
//                          tack\Utilities\Transmit\CC2530DB\..\..\..\..\..\C /
//                          omponents\mac\low_level\srf04\single_chip\ -I     /
//                          D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Projects\zs /
//                          tack\Utilities\Transmit\CC2530DB\..\..\..\..\..\C /
//                          omponents\mt\ -I D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û /
//                          ³ÎÄ£©\Projects\zstack\Utilities\Transmit\CC2530DB /
//                          \..\..\..\..\..\Components\osal\include\ -I       /
//                          D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Projects\zs /
//                          tack\Utilities\Transmit\CC2530DB\..\..\..\..\..\C /
//                          omponents\services\saddr\ -I                      /
//                          D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Projects\zs /
//                          tack\Utilities\Transmit\CC2530DB\..\..\..\..\..\C /
//                          omponents\services\sdata\ -I                      /
//                          D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Projects\zs /
//                          tack\Utilities\Transmit\CC2530DB\..\..\..\..\..\C /
//                          omponents\stack\af\ -I D:\work\ZSTACK-GTAMODBUS-v /
//                          1.0£¨Û³ÎÄ£©\Projects\zstack\Utilities\Transmit\CC /
//                          2530DB\..\..\..\..\..\Components\stack\nwk\ -I    /
//                          D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Projects\zs /
//                          tack\Utilities\Transmit\CC2530DB\..\..\..\..\..\C /
//                          omponents\stack\sapi\ -I                          /
//                          D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Projects\zs /
//                          tack\Utilities\Transmit\CC2530DB\..\..\..\..\..\C /
//                          omponents\stack\sec\ -I                           /
//                          D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Projects\zs /
//                          tack\Utilities\Transmit\CC2530DB\..\..\..\..\..\C /
//                          omponents\stack\sys\ -I                           /
//                          D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Projects\zs /
//                          tack\Utilities\Transmit\CC2530DB\..\..\..\..\..\C /
//                          omponents\stack\zdo\ -I                           /
//                          D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Projects\zs /
//                          tack\Utilities\Transmit\CC2530DB\..\..\..\..\..\C /
//                          omponents\zmac\ -I D:\work\ZSTACK-GTAMODBUS-v1.0£ /
//                          ¨Û³ÎÄ£©\Projects\zstack\Utilities\Transmit\CC2530 /
//                          DB\..\..\..\..\..\Components\zmac\f8w\ -Ohz       /
//                          --require_prototypes                              /
//    List file          =  D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Projects\zs /
//                          tack\Utilities\Transmit\CC2530DB\GTA-WMSCB-R1\Lis /
//                          t\ControlModule.s51                               /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME ControlModule

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?S_SHL
        EXTERN ?V0

        PUBLIC ??ControlBeep?relay
        FUNCTION ??ControlBeep?relay,0203H
        PUBLIC ??ControlLeds?relay
        FUNCTION ??ControlLeds?relay,0203H
        PUBLIC ??ControlRelay?relay
        FUNCTION ??ControlRelay?relay,0203H
        PUBLIC ??ControlStepMotor?relay
        FUNCTION ??ControlStepMotor?relay,0203H
        PUBLIC ??DisplaySmg?relay
        FUNCTION ??DisplaySmg?relay,0203H
        PUBLIC ??HC595IOInit?relay
        FUNCTION ??HC595IOInit?relay,0203H
        PUBLIC ??HC595SendData?relay
        FUNCTION ??HC595SendData?relay,0203H
        PUBLIC ??HC595StoreData?relay
        FUNCTION ??HC595StoreData?relay,0203H
        PUBLIC ControlBeep
        FUNCTION ControlBeep,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ControlLeds
        FUNCTION ControlLeds,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ControlRelay
        FUNCTION ControlRelay,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ControlStepMotor
        FUNCTION ControlStepMotor,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        PUBLIC DisplaySmg
        FUNCTION DisplaySmg,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC HC595IOInit
        FUNCTION HC595IOInit,0203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUBLIC HC595SendData
        FUNCTION HC595SendData,0203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUBLIC HC595StoreData
        FUNCTION HC595StoreData,0203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBWEAK P0DIR
        PUBWEAK P1DIR
        PUBWEAK _A_P0
        PUBWEAK _A_P1
        PUBLIC ledRow
        PUBLIC motorForewardCode
        PUBLIC motorReversalCode
        PUBLIC smgCode
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
Onboard_wait        SYMBOL "Onboard_wait"
??Onboard_wait?relay SYMBOL "?relay", Onboard_wait
ControlBeep         SYMBOL "ControlBeep"
??ControlBeep?relay SYMBOL "?relay", ControlBeep
ControlLeds         SYMBOL "ControlLeds"
??ControlLeds?relay SYMBOL "?relay", ControlLeds
ControlRelay        SYMBOL "ControlRelay"
??ControlRelay?relay SYMBOL "?relay", ControlRelay
ControlStepMotor    SYMBOL "ControlStepMotor"
??ControlStepMotor?relay SYMBOL "?relay", ControlStepMotor
DisplaySmg          SYMBOL "DisplaySmg"
??DisplaySmg?relay  SYMBOL "?relay", DisplaySmg
HC595IOInit         SYMBOL "HC595IOInit"
??HC595IOInit?relay SYMBOL "?relay", HC595IOInit
HC595SendData       SYMBOL "HC595SendData"
??HC595SendData?relay SYMBOL "?relay", HC595SendData
HC595StoreData      SYMBOL "HC595StoreData"
??HC595StoreData?relay SYMBOL "?relay", HC595StoreData

        EXTERN ??Onboard_wait?relay
        FUNCTION ??Onboard_wait?relay,00H
        EXTERN Onboard_wait
        FUNCTION Onboard_wait,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC

// D:\work\ZSTACK-GTAMODBUS-v1.0£¨Û³ÎÄ£©\Projects\zstack\Utilities\Transmit\Source\ControlModule.c
//    1 #include "ControlModule.h"

        ASEGN SFR_AN:DATA:NOROOT,080H
// union <unnamed> volatile __sfr _A_P0
_A_P0:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,090H
// union <unnamed> volatile __sfr _A_P1
_A_P1:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0fdH
// unsigned char volatile __sfr P0DIR
P0DIR:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0feH
// unsigned char volatile __sfr P1DIR
P1DIR:
        DATA8
        DS 1
//    2 //            ÊýÂë¹Ü¶ÎÂë 0     1     2     3     4     5     6     7     8     9

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//    3 const uint8 smgCode[] = {0x3f, 0x30, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f};
smgCode:
        DB 63
        DB 48
        DB 91
        DB 79
        DB 102
        DB 109
        DB 125
        DB 7
        DB 127
        DB 111
//    4 //µç»úÕý×ª

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//    5 const uint8 motorForewardCode[] = {0x08, 0x0c, 0x04, 0x06, 0x02, 0x03, 0x01, 0x09};
motorForewardCode:
        DB 8
        DB 12
        DB 4
        DB 6
        DB 2
        DB 3
        DB 1
        DB 9
//    6 //µç»ú·´×ª

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//    7 const uint8 motorReversalCode[] = {0x09, 0x01, 0x03, 0x02, 0x06, 0x04, 0x0c, 0x08};
motorReversalCode:
        DB 9
        DB 1
        DB 3
        DB 2
        DB 6
        DB 4
        DB 12
        DB 8
//    8 //LEDµãÕó±àÂë0~9

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//    9 const uint8 ledRow[][8] = {
ledRow:
        DB 56
        DB 68
        DB 68
        DB 68
        DB 68
        DB 68
        DB 68
        DB 56
        DB 24
        DB 40
        DB 8
        DB 8
        DB 8
        DB 8
        DB 8
        DB 62
        DB 62
        DB 2
        DB 2
        DB 62
        DB 32
        DB 32
        DB 32
        DB 62
        DB 62
        DB 2
        DB 2
        DB 62
        DB 2
        DB 2
        DB 2
        DB 62
        DB 72
        DB 72
        DB 72
        DB 72
        DB 126
        DB 8
        DB 8
        DB 8
        DB 124
        DB 64
        DB 64
        DB 120
        DB 4
        DB 4
        DB 68
        DB 56
        DB 56
        DB 68
        DB 64
        DB 120
        DB 68
        DB 68
        DB 68
        DB 56
        DB 124
        DB 4
        DB 4
        DB 8
        DB 16
        DB 16
        DB 16
        DB 16
        DB 56
        DB 68
        DB 68
        DB 56
        DB 68
        DB 68
        DB 68
        DB 56
        DB 56
        DB 68
        DB 68
        DB 68
        DB 60
        DB 4
        DB 68
        DB 56
//   10     0x38,0x44,0x44,0x44,0x44,0x44,0x44,0x38,//0
//   11     0x18,0x28,0x08,0x08,0x08,0x08,0x08,0x3e,//1
//   12     0x3e,0x02,0x02,0x3e,0x20,0x20,0x20,0x3e,//2
//   13     0x3e,0x02,0x02,0x3e,0x02,0x02,0x02,0x3e,//3
//   14     0x48,0x48,0x48,0x48,0x7e,0x08,0x08,0x08,//4
//   15     0x7c,0x40,0x40,0x78,0x04,0x04,0x44,0x38,//5
//   16     0x38,0x44,0x40,0x78,0x44,0x44,0x44,0x38,//6
//   17     0x7c,0x04,0x04,0x08,0x10,0x10,0x10,0x10,//7
//   18     0x38,0x44,0x44,0x38,0x44,0x44,0x44,0x38,//8
//   19     0x38,0x44,0x44,0x44,0x3c,0x04,0x44,0x38//9
//   20     
//   21 };
//   22 /**
//   23 * ÊýÂë¹ÜÏÔÊ¾numÊý×Ö
//   24 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   25 void DisplaySmg(uint8 num){
DisplaySmg:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function DisplaySmg
        CODE
        FUNCALL DisplaySmg, HC595IOInit
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL DisplaySmg, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL DisplaySmg, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL DisplaySmg, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL DisplaySmg, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL DisplaySmg, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL DisplaySmg, HC595SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
//   26     HC595IOInit();
        ; Setup parameters for call to function HC595IOInit
        LCALL   ??HC595IOInit?relay
//   27     HC595StoreData(smgCode[num%10]);
        ; Setup parameters for call to function HC595StoreData
        MOV     A,R6
        MOV     B,#0xa
        DIV     AB
        MOV     R0,B
        MOV     A,#smgCode & 0xff
        ADD     A,R0
        MOV     DPL,A
        MOV     A,#(smgCode >> 8) & 0xff
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??HC595StoreData?relay
//   28     HC595StoreData(0x00);
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
        LCALL   ??HC595StoreData?relay
//   29     HC595StoreData(0x00);
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
        LCALL   ??HC595StoreData?relay
//   30     HC595StoreData(0x00);
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
        LCALL   ??HC595StoreData?relay
//   31     HC595StoreData(0x00);
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
          CFI EndBlock cfiBlock0
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0
//   32     HC595SendData();
//   33 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        LCALL   ??HC595StoreData?relay
        ; Setup parameters for call to function HC595SendData
        ; Setup parameters for call to function HC595SendData
        ; Setup parameters for call to function HC595SendData
        LCALL   ??HC595SendData?relay
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock1
//   34 
//   35 /**
//   36 * Desc:¿ØÖÆµç»úÕý·´×ª
//   37 * Param: 0x00Õý×ª
//   38 *        0xff·´×ª
//   39 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   40 void ControlStepMotor(uint8 flg){
ControlStepMotor:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function ControlStepMotor
        CODE
        FUNCALL ControlStepMotor, HC595IOInit
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlStepMotor, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlStepMotor, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlStepMotor, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlStepMotor, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlStepMotor, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlStepMotor, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlStepMotor, Onboard_wait
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlStepMotor, HC595SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlStepMotor, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlStepMotor, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlStepMotor, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlStepMotor, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlStepMotor, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlStepMotor, HC595SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 0
        MOV     ?V0 + 2,R1
//   41     uint8 u_StepNum, i;
//   42     HC595IOInit();
        ; Setup parameters for call to function HC595IOInit
        LCALL   ??HC595IOInit?relay
//   43     for(i = 0; i<100;i++){
        MOV     R7,#0x64
//   44         for(u_StepNum = 0; u_StepNum < 8; u_StepNum++){
??ControlStepMotor_0:
        MOV     R6,#0x0
//   45             HC595StoreData(0x00);
??ControlStepMotor_1:
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
        LCALL   ??HC595StoreData?relay
//   46             HC595StoreData(0x00);
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
        LCALL   ??HC595StoreData?relay
//   47             HC595StoreData(0x00);
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
        LCALL   ??HC595StoreData?relay
//   48             HC595StoreData(0x00);
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
        LCALL   ??HC595StoreData?relay
//   49             if(flg == 0x00) //Õý×ª
        MOV     A,?V0 + 2
        MOV     ?V0 + 0,R6
        JNZ     ??ControlStepMotor_2
//   50                 HC595StoreData(~motorForewardCode[u_StepNum] & 0x0f);
        ; Setup parameters for call to function HC595StoreData
        MOV     A,#motorForewardCode & 0xff
        ADD     A,?V0 + 0
        MOV     DPL,A
        MOV     A,#(motorForewardCode >> 8) & 0xff
        SJMP    ??ControlStepMotor_3
//   51             else 
//   52                 HC595StoreData(~motorReversalCode[u_StepNum] & 0x0f);
??ControlStepMotor_2:
        ; Setup parameters for call to function HC595StoreData
        MOV     A,#motorReversalCode & 0xff
        ADD     A,?V0 + 0
        MOV     DPL,A
        MOV     A,#(motorReversalCode >> 8) & 0xff
??ControlStepMotor_3:
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        CPL     A
        ANL     A,#0xf
        MOV     R1,A
        LCALL   ??HC595StoreData?relay
//   53             Onboard_wait(4500);
        ; Setup parameters for call to function Onboard_wait
        MOV     R2,#-0x6c
        MOV     R3,#0x11
        LCALL   ??Onboard_wait?relay
//   54             HC595SendData();
        ; Setup parameters for call to function HC595SendData
        LCALL   ??HC595SendData?relay
//   55         }
        INC     R6
        MOV     A,R6
        CLR     C
        SUBB    A,#0x8
        JC      ??ControlStepMotor_1
//   56     }
        DEC     R7
        MOV     A,R7
        JNZ     ??ControlStepMotor_0
//   57     HC595StoreData(0x00);
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
        LCALL   ??HC595StoreData?relay
//   58     HC595StoreData(0x00);
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
        LCALL   ??HC595StoreData?relay
//   59     HC595StoreData(0x00);
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
        LCALL   ??HC595StoreData?relay
//   60     HC595StoreData(0x00);
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
        LCALL   ??HC595StoreData?relay
//   61     HC595StoreData(0x00);
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
        LCALL   ??HC595StoreData?relay
//   62     HC595SendData();
        ; Setup parameters for call to function HC595SendData
        LCALL   ??HC595SendData?relay
//   63 }
        MOV     R7,#0x3
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock2
//   64 /**
//   65 * Desc: ·¢ËÍÊý¾Ýµ½595£¬¿ØÖÆ·äÃùÆ÷µÄ¿ª¹Ø
//   66 * Param: flg 0x00 ´ò¿ª
//   67 *            0xff ¹Ø±Õ
//   68 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   69 void ControlBeep(uint8 flg){
ControlBeep:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function ControlBeep
        CODE
        FUNCALL ControlBeep, HC595IOInit
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlBeep, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlBeep, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlBeep, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlBeep, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlBeep, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlBeep, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlBeep, HC595SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
//   70     uint8 u_StepNum, i;
//   71     HC595IOInit();
        ; Setup parameters for call to function HC595IOInit
        LCALL   ??HC595IOInit?relay
//   72     HC595StoreData(0x00);
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
        LCALL   ??HC595StoreData?relay
//   73     HC595StoreData(0x00);
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
        LCALL   ??HC595StoreData?relay
//   74     HC595StoreData(0x00);
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
        LCALL   ??HC595StoreData?relay
//   75     HC595StoreData(0x00);
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
        LCALL   ??HC595StoreData?relay
//   76     if(flg == 0x00)//¿ª·äÃùÆ÷
        MOV     A,R6
        JNZ     ??ControlBeep_0
//   77         HC595StoreData(0x20);
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x20
        SJMP    ??ControlBeep_1
//   78     else 
//   79         HC595StoreData(0x00);
??ControlBeep_0:
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
??ControlBeep_1:
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock3
//   80     HC595SendData();
//   81 }
//   82 /**
//   83 * Desc: ·¢ËÍÊý¾Ýµ½595£¬¿ØÖÆ¼ÌµçÆ÷µÄ¿ª¹Ø
//   84 * Param: flg 0x00 ´ò¿ª
//   85 *            0xff ¹Ø±Õ
//   86 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   87 void ControlRelay(uint8 flg){
ControlRelay:
          CFI Block cfiBlock4 Using cfiCommon0
          CFI Function ControlRelay
        CODE
        FUNCALL ControlRelay, HC595IOInit
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlRelay, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlRelay, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlRelay, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlRelay, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlRelay, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlRelay, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlRelay, HC595SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
//   88     uint8 u_StepNum, i;
//   89     HC595IOInit();
        ; Setup parameters for call to function HC595IOInit
        LCALL   ??HC595IOInit?relay
//   90     HC595StoreData(0x00);
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
        LCALL   ??HC595StoreData?relay
//   91     HC595StoreData(0x00);
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
        LCALL   ??HC595StoreData?relay
//   92     HC595StoreData(0x00);
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
        LCALL   ??HC595StoreData?relay
//   93     HC595StoreData(0x00);
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
        LCALL   ??HC595StoreData?relay
//   94     if(flg == 0x00)//¼ÌµçÆ÷¿ª¹Ø±ÕºÏ
        MOV     A,R6
        JNZ     ??ControlRelay_0
//   95         HC595StoreData(0x10);
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x10
        SJMP    ??ControlRelay_1
//   96     else 
//   97         HC595StoreData(0x00);
??ControlRelay_0:
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
??ControlRelay_1:
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock4
//   98     HC595SendData();
//   99 }
//  100 /**
//  101 * Desc: ·¢ËÍÊý¾Ýµ½595£¬¿ØÖÆLEDµãÕóµÄÏÔÊ¾
//  102 * Param: num%10  ÏÔÊ¾0~9ÈÎÒâÊý×Ö
//  103 *            
//  104 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  105 void ControlLeds(uint8 num){
ControlLeds:
          CFI Block cfiBlock5 Using cfiCommon0
          CFI Function ControlLeds
        CODE
        FUNCALL ControlLeds, HC595IOInit
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlLeds, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlLeds, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlLeds, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlLeds, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlLeds, HC595StoreData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ControlLeds, HC595SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,R1
        MOV     R7,A
//  106     uint8 col, row;
//  107     uint8 colCode;
//  108     HC595IOInit();
        ; Setup parameters for call to function HC595IOInit
        LCALL   ??HC595IOInit?relay
//  109     colCode = 0xff;
//  110     for(row = 0; row < 8; row++){
        MOV     R6,#0x0
//  111         HC595StoreData(0x00);
??ControlLeds_0:
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
        LCALL   ??HC595StoreData?relay
//  112         colCode = ~(0x01 << row);
//  113         HC595StoreData(colCode);
        ; Setup parameters for call to function HC595StoreData
        MOV     ?V0 + 0,#0x1
        MOV     ?V0 + 1,#0x0
        MOV     A,R6
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        MOV     A,?V0 + 0
        CPL     A
        MOV     R1,A
        LCALL   ??HC595StoreData?relay
//  114         HC595StoreData(ledRow[num%10][row]);
        ; Setup parameters for call to function HC595StoreData
        MOV     ?V0 + 0,R6
        MOV     A,R7
        MOV     B,#0xa
        DIV     AB
        MOV     ?V0 + 2,B
        MOV     ?V0 + 3,#0x0
        MOV     A,#0x3
        MOV     R0,#?V0 + 2
        LCALL   ?S_SHL
        MOV     A,#ledRow & 0xff
        ADD     A,?V0 + 2
        MOV     R0,A
        MOV     A,#(ledRow >> 8) & 0xff
        ADDC    A,?V0 + 3
        MOV     R1,A
        MOV     A,R0
        ADD     A,?V0 + 0
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??HC595StoreData?relay
//  115         HC595StoreData(0x00);
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
        LCALL   ??HC595StoreData?relay
//  116         HC595StoreData(0x00);
        ; Setup parameters for call to function HC595StoreData
        MOV     R1,#0x0
        LCALL   ??HC595StoreData?relay
//  117         HC595SendData();
        ; Setup parameters for call to function HC595SendData
        LCALL   ??HC595SendData?relay
//  118     }
        INC     R6
        MOV     A,R6
        CLR     C
        SUBB    A,#0x8
        JC      ??ControlLeds_0
//  119 }
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock5
//  120 
//  121 /**
//  122 * ³õÊ¼»¯HC595µÄIO¿Ú
//  123 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  124 void HC595IOInit(void){
HC595IOInit:
          CFI Block cfiBlock6 Using cfiCommon0
          CFI Function HC595IOInit
        CODE
        ; Saved register size: 0
        ; Auto size: 0
//  125     IO_DIR_PORT_PIN(0, 0, IO_OUT);
        ORL     0xfd,#0x1
//  126     IO_DIR_PORT_PIN(0, 1, IO_OUT);
        ORL     0xfd,#0x2
//  127     IO_DIR_PORT_PIN(0, 4, IO_OUT);
        ORL     0xfd,#0x10
//  128     IO_DIR_PORT_PIN(1, 2, IO_OUT);
        ORL     0xfe,#0x4
//  129     EN = 0;
        CLR     0x90.2
//  130 }
        LJMP    ?BRET
          CFI EndBlock cfiBlock6
        REQUIRE P0DIR
        REQUIRE P1DIR
        REQUIRE _A_P1
//  131 
//  132 /**
//  133 * ½«valÊý¾Ý´æÈë595Ëø´æÆ÷
//  134 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  135 void HC595StoreData(uint8 val){
HC595StoreData:
          CFI Block cfiBlock7 Using cfiCommon0
          CFI Function HC595StoreData
        CODE
        PUSH    ?V0 + 0
          CFI V0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    ?V0 + 1
          CFI V1 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  136     uint8 i;
//  137     for(i = 0; i < 8; i++){
        MOV     R2,#0x0
//  138         if((val << i) & 0x80){
??HC595StoreData_0:
        MOV     ?V0 + 0,R1
        MOV     ?V0 + 1,#0x0
        MOV     A,R2
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        MOV     A,?V0 + 0
        ANL     A,#0x80
        JZ      ??HC595StoreData_1
//  139             DI = 1;
        SETB    0x80.0
        SJMP    ??HC595StoreData_2
//  140         } else {
//  141             DI = 0;
??HC595StoreData_1:
        CLR     0x80.0
//  142         }
//  143         SCLK = 0;
??HC595StoreData_2:
        CLR     0x80.1
//  144         SCLK = 1;
        SETB    0x80.1
//  145     }
        INC     R2
        MOV     A,R2
        CLR     C
        SUBB    A,#0x8
        JC      ??HC595StoreData_0
//  146 }
        POP     ?V0 + 1
          CFI V1 SameValue
          CFI CFA_SP SP+-4
        POP     ?V0 + 0
          CFI V0 SameValue
          CFI CFA_SP SP+-3
        LJMP    ?BRET
          CFI EndBlock cfiBlock7
        REQUIRE _A_P0
//  147 
//  148 /**
//  149 * ½«Ëø´æÆ÷ÖÐµÄÊý¾Ý²¢ÐÐÊä³ö£¬ÊÍ·ÅÊý¾Ý
//  150 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  151 void HC595SendData(void){
HC595SendData:
          CFI Block cfiBlock8 Using cfiCommon0
          CFI Function HC595SendData
        CODE
        ; Saved register size: 0
        ; Auto size: 0
//  152     RCLK = 0;
        CLR     0x80.4
//  153     RCLK = 1;
        SETB    0x80.4
//  154 }
        LJMP    ?BRET
          CFI EndBlock cfiBlock8
        REQUIRE _A_P0

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??DisplaySmg?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    DisplaySmg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ControlStepMotor?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ControlStepMotor

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ControlBeep?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ControlBeep

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ControlRelay?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ControlRelay

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ControlLeds?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ControlLeds

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??HC595IOInit?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    HC595IOInit

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??HC595StoreData?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    HC595StoreData

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??HC595SendData?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    HC595SendData

        END
//  155 
// 
// 446 bytes in segment BANKED_CODE
//  48 bytes in segment BANK_RELAYS
//   4 bytes in segment SFR_AN
// 106 bytes in segment XDATA_ROM_C
// 
// 494 bytes of CODE  memory
// 106 bytes of CONST memory
//   0 bytes of DATA  memory (+ 4 bytes shared)
//
//Errors: none
//Warnings: 5
