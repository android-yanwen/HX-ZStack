###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.20.2.41139 for 8051             15/Aug/2016  21:35:46 #
# Copyright 2004-2013 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#                                                                             #
#    Source file        =  D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Co #
#                          mponents\hal\target\CC2530EB\hal_sht11.c           #
#    Command line       =  -f D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£© #
#                          \Projects\zstack\Utilities\Transmit\CC2530DB\..\.. #
#                          \..\Tools\CC2530DB\f8wEndev.cfg (-DCPU32MHZ        #
#                          -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3         #
#                          -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f          #
#                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Pr #
#                          ojects\zstack\Utilities\Transmit\CC2530DB\..\..\.. #
#                          \Tools\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO         #
#                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR       #
#                          -DDEFAULT_CHANLIST=0x00001000                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x1178                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=3             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=2    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=TRUE -DPOLL_RATE=1000         #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 D:\work\ZSTACK-GTAMODBUS-Ö÷ #
#                          ¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Components\hal\target\CC2530E #
#                          B\hal_sht11.c -D NWK_AUTO_POLL -D MT_TASK -D       #
#                          ZTOOL_P1 -D MT_SYS_FUNC -D MT_ZDO_FUNC -D          #
#                          ZDNWKMGR_MIN_TRANSMISSIONS=0 -D GTA_DEBUG -D       #
#                          ZIGBEEPRO -D GTA_WWSB_R1 -lC                       #
#                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Pr #
#                          ojects\zstack\Utilities\Transmit\CC2530DB\GTA-WWSB #
#                          -R1\List\ -lA D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140 #
#                          707£¨Û³ÎÄ£©\Projects\zstack\Utilities\Transmit\CC2 #
#                          530DB\GTA-WWSB-R1\List\ --diag_suppress            #
#                          Pe001,Pa010 -o D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«14 #
#                          0707£¨Û³ÎÄ£©\Projects\zstack\Utilities\Transmit\CC #
#                          2530DB\GTA-WWSB-R1\Obj\ -e --no_code_motion        #
#                          --debug --core=plain --dptr=16,1                   #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£© #
#                          \Projects\zstack\Utilities\Transmit\CC2530DB\ -I   #
#                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Pr #
#                          ojects\zstack\Utilities\Transmit\CC2530DB\..\Sourc #
#                          e\ -I D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³Î #
#                          Ä£©\Projects\zstack\Utilities\Transmit\CC2530DB\.. #
#                          \..\..\ZMain\TI2530DB\ -I                          #
#                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Pr #
#                          ojects\zstack\Utilities\Transmit\CC2530DB\..\..\.. #
#                          \..\..\Components\hal\include\ -I                  #
#                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Pr #
#                          ojects\zstack\Utilities\Transmit\CC2530DB\..\..\.. #
#                          \..\..\Components\hal\target\CC2530EB\ -I          #
#                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Pr #
#                          ojects\zstack\Utilities\Transmit\CC2530DB\..\..\.. #
#                          \..\..\Components\mac\include\ -I                  #
#                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Pr #
#                          ojects\zstack\Utilities\Transmit\CC2530DB\..\..\.. #
#                          \..\..\Components\mac\high_level\ -I               #
#                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Pr #
#                          ojects\zstack\Utilities\Transmit\CC2530DB\..\..\.. #
#                          \..\..\Components\mac\low_level\srf04\ -I          #
#                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Pr #
#                          ojects\zstack\Utilities\Transmit\CC2530DB\..\..\.. #
#                          \..\..\Components\mac\low_level\srf04\single_chip\ #
#                           -I D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£ #
#                          ©\Projects\zstack\Utilities\Transmit\CC2530DB\..\. #
#                          .\..\..\..\Components\mt\ -I                       #
#                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Pr #
#                          ojects\zstack\Utilities\Transmit\CC2530DB\..\..\.. #
#                          \..\..\Components\osal\include\ -I                 #
#                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Pr #
#                          ojects\zstack\Utilities\Transmit\CC2530DB\..\..\.. #
#                          \..\..\Components\services\saddr\ -I               #
#                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Pr #
#                          ojects\zstack\Utilities\Transmit\CC2530DB\..\..\.. #
#                          \..\..\Components\services\sdata\ -I               #
#                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Pr #
#                          ojects\zstack\Utilities\Transmit\CC2530DB\..\..\.. #
#                          \..\..\Components\stack\af\ -I                     #
#                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Pr #
#                          ojects\zstack\Utilities\Transmit\CC2530DB\..\..\.. #
#                          \..\..\Components\stack\nwk\ -I                    #
#                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Pr #
#                          ojects\zstack\Utilities\Transmit\CC2530DB\..\..\.. #
#                          \..\..\Components\stack\sapi\ -I                   #
#                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Pr #
#                          ojects\zstack\Utilities\Transmit\CC2530DB\..\..\.. #
#                          \..\..\Components\stack\sec\ -I                    #
#                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Pr #
#                          ojects\zstack\Utilities\Transmit\CC2530DB\..\..\.. #
#                          \..\..\Components\stack\sys\ -I                    #
#                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Pr #
#                          ojects\zstack\Utilities\Transmit\CC2530DB\..\..\.. #
#                          \..\..\Components\stack\zdo\ -I                    #
#                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Pr #
#                          ojects\zstack\Utilities\Transmit\CC2530DB\..\..\.. #
#                          \..\..\Components\zmac\ -I                         #
#                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Pr #
#                          ojects\zstack\Utilities\Transmit\CC2530DB\..\..\.. #
#                          \..\..\Components\zmac\f8w\ -Ohz                   #
#                          --require_prototypes                               #
#    List file          =  D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Pr #
#                          ojects\zstack\Utilities\Transmit\CC2530DB\GTA-WWSB #
#                          -R1\List\hal_sht11.lst                             #
#    Object file        =  D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Pr #
#                          ojects\zstack\Utilities\Transmit\CC2530DB\GTA-WWSB #
#                          -R1\Obj\hal_sht11.r51                              #
#                                                                             #
#                                                                             #
###############################################################################

D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Components\hal\target\CC2530EB\hal_sht11.c
      1          /*******************************************************************************
      2          * ÎÄ ¼þ Ãû£ºSHT11.c
      3          * ¹¦    ÄÜ£ºSHT11ÎÂÊª¶È´«¸ÐÆ÷Çý¶¯¡£
      4          * Ó²¼þÁ¬½Ó£ºSHT11ÓëCC2530µÄÓ²¼þÁ¬½Ó¹ØÏµÈçÏÂËùÊ¾£º
      5          *
      6          *           SHT11                  CC2530
      7          *           DATA                    p0.1//P0.7
      8          *           SCK                     p1.7//P0.0
      9          *******************************************************************************/
     10          
     11          #include "hal_types.h"
     12          #include "OSAL.h"
     13          #include "OnBoard.h"

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x90
   \   union <unnamed> volatile __sfr _A_P1
   \                     _A_P1:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf4
   \   unsigned char volatile __sfr P1SEL
   \                     P1SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfd
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfe
   \   unsigned char volatile __sfr P1DIR
   \                     P1DIR:
   \   000000                DS 1
     14          #include "hal_sht11.h"
     15          #include "math.h"
     16          
     17          
     18          
     19          
     20          
     21          
     22          
     23          
     24          
     25          /*******************************************************************************
     26           * º¯ÊýÃû³Æ£ºSHT11_PIN_Init
     27           *
     28           * ¹¦ÄÜÃèÊö£ºCC2430ÓëSHT11ÏàÁ¬½ÓµÄÒý½Å³õÊ¼»¯
     29           *
     30           * ²Î    Êý£ºÎÞ
     31           *
     32           * ·µ »Ø Öµ£ºÎÞ
     33           ******************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     34          void Hal_SHT11_Init(void)
   \                     Hal_SHT11_Init:
     35          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     36            P1SEL = P1SEL & 0x7f;
   \   000000   53F47F       ANL     0xf4,#0x7f
     37            IO_DIR_PORT_PIN(1, 7, IO_OUT);      //p1.7 // P0.0·½ÏòÎªÊä³ö
   \   000003   43FE80       ORL     0xfe,#0x80
     38            IO_DIR_PORT_PIN(0, 1, IO_OUT);      //p0.1// P0.7·½ÏòÎªÊä³ö
   \   000006   12....       LCALL   ?Subroutine3 & 0xFFFF
     39            DATA = 1;
     40            SCK = 0;
   \                     ??CrossCallReturnLabel_0:
   \   000009                REQUIRE ?Subroutine1
   \   000009                REQUIRE P1SEL
   \   000009                REQUIRE P1DIR
   \   000009                REQUIRE P0DIR
   \   000009                REQUIRE _A_P0
   \   000009                REQUIRE _A_P1
   \   000009                ; // Fall through to label ?Subroutine1
     41          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   C297         CLR     0x90.7
   \   000002   02....       LJMP    ?BRET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   43FD02       ORL     0xfd,#0x2
   \   000003   D281         SETB    0x80.1
   \   000005   22           RET
     42          
     43          
     44          /*******************************************************************************
     45           * º¯ÊýÃû³Æ£ºs_write_byte
     46           *
     47           * ¹¦ÄÜÃèÊö£ºÏòSHT11Ð´1¸ö×Ö½Ú²¢¼ì²âSHT11ÊÇ·ñÓ¦´ð
     48           *
     49           * ²Î    Êý£ºvalue  ÒªÐ´ÈëµÄ1×Ö½ÚÊý¾Ý
     50           *
     51           * ·µ »Ø Öµ£ºerror=1±íÃ÷SHT11Î´Ó¦´ð
     52           ******************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     53          char s_write_byte(unsigned char value)
   \                     s_write_byte:
     54          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   \   000004   E9           MOV     A,R1
   \   000005   F8           MOV     R0,A
     55            static unsigned char i,j,error=0;
     56          
     57            IO_DIR_PORT_PIN(0, 1, IO_OUT);      //p0.1// P0.7·½ÏòÎªÊä³ö
   \   000006   43FD02       ORL     0xfd,#0x2
     58          
     59            /* ´Ó¸ßµ½µÍÖðÎ»·¢ËÍ */
     60            for (i=0x80;i>0;i/=2)               // ÒÆÎ»ÑÚÂë
   \   000009   90....       MOV     DPTR,#??i
   \   00000C   7480         MOV     A,#-0x80
   \   00000E   F0           MOVX    @DPTR,A
     61            {
     62              if(i & value)
   \                     ??s_write_byte_0:
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   58           ANL     A,R0
   \   000011   6004         JZ      ??s_write_byte_1
     63                DATA = 1;
   \   000013   D281         SETB    0x80.1
   \   000015   8002         SJMP    ??s_write_byte_2
     64              else
     65                DATA = 0;
   \                     ??s_write_byte_1:
   \   000017   C281         CLR     0x80.1
     66          
     67              SCK = 1;
   \                     ??s_write_byte_2:
   \   000019   D297         SETB    0x90.7
     68              for(j=0;j<50;j++ )  asm("nop");     	
   \   00001B   90....       MOV     DPTR,#??j
   \   00001E   E4           CLR     A
   \   00001F   F0           MOVX    @DPTR,A
   \                     ??s_write_byte_3:
   \   000020   00           nop
   \   000021   12....       LCALL   ?Subroutine4 & 0xFFFF
   \                     ??CrossCallReturnLabel_4:
   \   000024   40FA         JC      ??s_write_byte_3
     69              SCK = 0;
   \   000026   C297         CLR     0x90.7
     70              for(j=0;j<50;j++ )  asm("nop");  
   \   000028   E4           CLR     A
   \   000029   F0           MOVX    @DPTR,A
   \                     ??s_write_byte_4:
   \   00002A   00           nop
   \   00002B   12....       LCALL   ?Subroutine4 & 0xFFFF
     71            }
   \                     ??CrossCallReturnLabel_5:
   \   00002E   40FA         JC      ??s_write_byte_4
   \   000030   90....       MOV     DPTR,#??i
   \   000033   E0           MOVX    A,@DPTR
   \   000034   C3           CLR     C
   \   000035   13           RRC     A
   \   000036   F0           MOVX    @DPTR,A
   \   000037   70D6         JNZ     ??s_write_byte_0
     72          
     73            DATA=1;                              // ÊÍ·ÅDATAÏß
   \   000039   D281         SETB    0x80.1
     74            SCK=1;                               // µÚ9¸öSCK
   \   00003B   D297         SETB    0x90.7
     75            IO_DIR_PORT_PIN(0, 1, IO_IN);        //p0.1// P0.7·½ÏòÎªÊäÈë
   \   00003D   53FDFD       ANL     0xfd,#0xfd
     76            for(j=0;j<50;j++ )  asm("nop");    
   \   000040   90....       MOV     DPTR,#??j
   \   000043   E4           CLR     A
   \   000044   F0           MOVX    @DPTR,A
   \                     ??s_write_byte_5:
   \   000045   00           nop
   \   000046   12....       LCALL   ?Subroutine4 & 0xFFFF
   \                     ??CrossCallReturnLabel_6:
   \   000049   40FA         JC      ??s_write_byte_5
     77            error=DATA;                          // ¼ì²éÓ¦´ð (SHT11½«À­µ×DATA×÷ÎªÓ¦´ð)
   \   00004B   A281         MOV     C,0x80.1
   \   00004D   E4           CLR     A
   \   00004E   33           RLC     A
   \   00004F   90....       MOV     DPTR,#??error
   \   000052   F0           MOVX    @DPTR,A
     78            SCK=0;
   \   000053   C297         CLR     0x90.7
     79            return error;                        // error=1±íÃ÷SHT11Î´Ó¦´ð
   \   000055   F9           MOV     R1,A
   \   000056                REQUIRE ?Subroutine0
   \   000056                REQUIRE P0DIR
   \   000056                REQUIRE _A_P0
   \   000056                REQUIRE _A_P1
   \   000056                ; // Fall through to label ?Subroutine0
     80          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   04           INC     A
   \   000002   F0           MOVX    @DPTR,A
   \   000003   C3           CLR     C
   \   000004   9432         SUBB    A,#0x32
   \   000006   22           RET

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??i:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??j:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??error:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     81          
     82          
     83          /*******************************************************************************
     84           * º¯ÊýÃû³Æ£ºs_read_byte
     85           *
     86           * ¹¦ÄÜÃèÊö£º´ÓSHT11¶Á1¸ö×Ö½Ú²¢µ±ÊäÈë²ÎÊýack=1Ê±¸ø³öÓ¦´ð
     87           *
     88           * ²Î    Êý£ºack  Ó¦´ð±êÖ¾
     89           *
     90           * ·µ »Ø Öµ£ºerror=1±íÃ÷SHT11Î´Ó¦´ð
     91           ******************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     92          unsigned char s_read_byte(unsigned char ack)
   \                     s_read_byte:
     93          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
   \   000000   E9           MOV     A,R1
   \   000001   F8           MOV     R0,A
     94            unsigned char i,j,val=0;
   \   000002   7900         MOV     R1,#0x0
     95          
     96            IO_DIR_PORT_PIN(0, 1, IO_OUT);      //p0.1// P0.7·½ÏòÎªÊä³ö
   \   000004   12....       LCALL   ?Subroutine3 & 0xFFFF
     97          
     98            DATA=1;                               // ÊÍ·ÅDATAÏß
     99          
    100            IO_DIR_PORT_PIN(0, 1, IO_IN);         //p0.1// P0.7·½ÏòÎªÊäÈë
   \                     ??CrossCallReturnLabel_1:
   \   000007   53FDFD       ANL     0xfd,#0xfd
    101            /* ´Ó¸ßµ½µÍÖðÎ»¶ÁÈ¡ */
    102            for (i=0x80;i>0;i/=2)                 // ÒÆÎ»ÑÚÂë
   \   00000A   7A80         MOV     R2,#-0x80
    103            {
    104              SCK = 1;
   \                     ??s_read_byte_0:
   \   00000C   D297         SETB    0x90.7
    105              for(j=0;j<50;j++ )  asm("nop"); 
   \   00000E   7432         MOV     A,#0x32
   \                     ??s_read_byte_1:
   \   000010   00           nop
   \   000011   14           DEC     A
   \   000012   70FC         JNZ     ??s_read_byte_1
    106              if (DATA) val=(val | i);
   \   000014   A281         MOV     C,0x80.1
   \   000016   5004         JNC     ??s_read_byte_2
   \   000018   EA           MOV     A,R2
   \   000019   C9           XCH     A,R1
   \   00001A   49           ORL     A,R1
   \   00001B   F9           MOV     R1,A
    107               
    108              SCK = 0;  	
   \                     ??s_read_byte_2:
   \   00001C   C297         CLR     0x90.7
    109              for(j=0;j<50;j++ )  asm("nop");     
   \   00001E   7432         MOV     A,#0x32
   \                     ??s_read_byte_3:
   \   000020   00           nop
   \   000021   14           DEC     A
   \   000022   70FC         JNZ     ??s_read_byte_3
    110            }
   \   000024   EA           MOV     A,R2
   \   000025   C3           CLR     C
   \   000026   13           RRC     A
   \   000027   FA           MOV     R2,A
   \   000028   70E2         JNZ     ??s_read_byte_0
    111          
    112            IO_DIR_PORT_PIN(0, 1, IO_OUT);         //p0.1// P0.2·½ÏòÎªÊä³ö
   \   00002A   43FD02       ORL     0xfd,#0x2
    113            //DATA = !ack;                           // µ±ack=1Ê±À­µ×DATAÏß
    114            if(ack==1)DATA=0;
   \   00002D   7401         MOV     A,#0x1
   \   00002F   68           XRL     A,R0
   \   000030   7004         JNZ     ??s_read_byte_4
   \   000032   C281         CLR     0x80.1
   \   000034   8002         SJMP    ??s_read_byte_5
    115            else DATA=1;
   \                     ??s_read_byte_4:
   \   000036   D281         SETB    0x80.1
    116            for(j=0;j<50;j++ )  asm("nop");  
   \                     ??s_read_byte_5:
   \   000038   7432         MOV     A,#0x32
   \                     ??s_read_byte_6:
   \   00003A   00           nop
   \   00003B   14           DEC     A
   \   00003C   70FC         JNZ     ??s_read_byte_6
    117            SCK = 1;                               // µÚ9¸öSCK
   \   00003E   D297         SETB    0x90.7
    118            for(j=0;j<50;j++ )  asm("nop");         	
   \   000040   7432         MOV     A,#0x32
   \                     ??s_read_byte_7:
   \   000042   00           nop
   \   000043   14           DEC     A
   \   000044   70FC         JNZ     ??s_read_byte_7
    119            SCK = 0;
   \   000046   C297         CLR     0x90.7
    120            for(j=0;j<50;j++ )  asm("nop");  
   \   000048   7432         MOV     A,#0x32
   \                     ??s_read_byte_8:
   \   00004A   00           nop
   \   00004B   14           DEC     A
   \   00004C   70FC         JNZ     ??s_read_byte_8
    121            DATA = 1;                              // ÊÍ·ÅDATAÏß
   \   00004E   D281         SETB    0x80.1
    122            return val;
   \   000050   02....       LJMP    ?BRET
   \   000053                REQUIRE P0DIR
   \   000053                REQUIRE _A_P0
   \   000053                REQUIRE _A_P1
    123          }
    124          
    125          
    126          /*******************************************************************************
    127           * º¯ÊýÃû³Æ£ºs_transstart
    128           *
    129           * ¹¦ÄÜÃèÊö£º·¢ËÍÒ»¸ö"Æô¶¯´«Êä"ÐòÁÐ
    130           *                 _____         ________
    131           *           DATA:      |_______|
    132           *                     ___     ___
    133           *           SCK : ___|   |___|   |______
    134           *
    135           * ²Î    Êý£ºÎÞ
    136           *
    137           * ·µ »Ø Öµ£ºÎÞ
    138           ******************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    139          void s_transstart(void)
   \                     s_transstart:
    140          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    141             unsigned char j;
    142          
    143             IO_DIR_PORT_PIN(0, 1, IO_OUT);         //p0.1// P0.7·½ÏòÎªÊä³ö
   \   000000   12....       LCALL   ?Subroutine3 & 0xFFFF
    144          
    145             DATA = 1; 
    146             SCK = 0;                     // ³õÊ¼×´Ì¬
   \                     ??CrossCallReturnLabel_2:
   \   000003   C297         CLR     0x90.7
    147             for(j=0;j<100;j++ )  asm("nop");         	
   \   000005   7464         MOV     A,#0x64
   \                     ??s_transstart_0:
   \   000007   00           nop
   \   000008   14           DEC     A
   \   000009   70FC         JNZ     ??s_transstart_0
    148             SCK = 1;
   \   00000B   D297         SETB    0x90.7
    149             for(j=0;j<100;j++ )  asm("nop");         	
   \   00000D   7464         MOV     A,#0x64
   \                     ??s_transstart_1:
   \   00000F   00           nop
   \   000010   14           DEC     A
   \   000011   70FC         JNZ     ??s_transstart_1
    150             DATA = 0;
   \   000013   C281         CLR     0x80.1
    151             for(j=0;j<100;j++ )  asm("nop");         	
   \   000015   7464         MOV     A,#0x64
   \                     ??s_transstart_2:
   \   000017   00           nop
   \   000018   14           DEC     A
   \   000019   70FC         JNZ     ??s_transstart_2
    152             SCK = 0;
   \   00001B   C297         CLR     0x90.7
    153             for(j=0;j<100;j++ ) asm("nop");         	
   \   00001D   7464         MOV     A,#0x64
   \                     ??s_transstart_3:
   \   00001F   00           nop
   \   000020   14           DEC     A
   \   000021   70FC         JNZ     ??s_transstart_3
    154             SCK = 1;
   \   000023   D297         SETB    0x90.7
    155             for(j=0;j<100;j++ )  asm("nop");         	
   \   000025   7464         MOV     A,#0x64
   \                     ??s_transstart_4:
   \   000027   00           nop
   \   000028   14           DEC     A
   \   000029   70FC         JNZ     ??s_transstart_4
    156             DATA = 1;		
   \   00002B   D281         SETB    0x80.1
    157             for(j=0;j<100;j++ )  asm("nop");         	
   \   00002D   7464         MOV     A,#0x64
   \                     ??s_transstart_5:
   \   00002F   00           nop
   \   000030   14           DEC     A
   \   000031   70FC         JNZ     ??s_transstart_5
    158             SCK= 0;		
   \   000033   02....       LJMP    ?Subroutine1 & 0xFFFF
   \   000036                REQUIRE P0DIR
   \   000036                REQUIRE _A_P0
   \   000036                REQUIRE _A_P1
    159          }
    160          
    161          
    162          /*******************************************************************************
    163           * º¯ÊýÃû³Æ£ºs_connectionreset
    164           *
    165           * ¹¦ÄÜÃèÊö£ºÍ¨ÐÅ¸´Î»
    166           *                 _____________________________________________________         ________
    167           *           DATA:                                                      |_______|
    168           *                    _    _    _    _    _    _    _    _    _        ___     ___
    169           *           SCK : __| |__| |__| |__| |__| |__| |__| |__| |__| |______|   |___|   |______
    170           *
    171           * ²Î    Êý£ºÎÞ
    172           *
    173           * ·µ »Ø Öµ£ºÎÞ
    174           ******************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    175          void s_connectionreset(void)
   \                     s_connectionreset:
    176          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    177            unsigned char i;
    178          
    179            IO_DIR_PORT_PIN(0, 1, IO_OUT);            //p0.1// P0.2·½ÏòÎªÊä³ö
   \   000004   12....       LCALL   ?Subroutine3 & 0xFFFF
    180          
    181            DATA = 1; SCK = 0;                        // ³õÊ¼×´Ì¬
   \                     ??CrossCallReturnLabel_3:
   \   000007   C297         CLR     0x90.7
    182          
    183            /* 9¸öSCK ÖÜÆÚ*/
    184            for(i=0;i<9;i++)
   \   000009   7409         MOV     A,#0x9
    185            {
    186              SCK = 1;
   \                     ??s_connectionreset_0:
   \   00000B   D297         SETB    0x90.7
    187              SCK = 0;
   \   00000D   C297         CLR     0x90.7
    188            }
   \   00000F   14           DEC     A
   \   000010   70F9         JNZ     ??s_connectionreset_0
    189          
    190            s_transstart();                           // ·¢ËÍÒ»¸ö"Æô¶¯´«Êä"ÐòÁÐ
   \   000012                ; Setup parameters for call to function s_transstart
   \   000012   12....       LCALL   ??s_transstart?relay
    191          }
   \   000015   02....       LJMP    ?Subroutine0 & 0xFFFF
   \   000018                REQUIRE P0DIR
   \   000018                REQUIRE _A_P0
   \   000018                REQUIRE _A_P1
    192          
    193          
    194          /*******************************************************************************
    195           * º¯ÊýÃû³Æ£ºs_softreset
    196           *
    197           * ¹¦ÄÜÃèÊö£ºÈí¼þ¸´Î»
    198           *
    199           * ²Î    Êý£ºÎÞ
    200           *
    201           * ·µ »Ø Öµ£º·µ»ØÖµÎª1±íÊ¾SHT11Î´ÏìÓ¦
    202           ******************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    203          char s_softreset(void)
   \                     s_softreset:
    204          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    205            unsigned char error=0;
    206          
    207            s_connectionreset();                       // Í¨ÐÅ¸´Î»
   \   000004                ; Setup parameters for call to function s_connectionreset
   \   000004   12....       LCALL   ??s_connectionreset?relay
    208            error+=s_write_byte(RESET);                // ·¢ËÍ"¸´Î»"ÃüÁî¸øSHT11
    209            return error;                              // error=1±íÊ¾SHT11Î´ÏìÓ¦
   \   000007                ; Setup parameters for call to function s_write_byte
   \   000007   791E         MOV     R1,#0x1e
   \   000009   12....       LCALL   ??s_write_byte?relay
   \   00000C   02....       LJMP    ?Subroutine0 & 0xFFFF
    210          }
    211          
    212          
    213          /*******************************************************************************
    214           * º¯ÊýÃû³Æ£ºs_read_statusreg
    215           *
    216           * ¹¦ÄÜÃèÊö£º¶ÁÈ¡×´Ì¬¼Ä´æÆ÷ºÍÐ£ÑéºÍ
    217           *
    218           * ²Î    Êý£ºp_value      ×´Ì¬¼Ä´æÆ÷µÄÖµ
    219           *           p_checksum   Ð£ÑéºÍ
    220           *
    221           * ·µ »Ø Öµ£º·µ»ØÖµÎª1±íÊ¾SHT11Î´ÏìÓ¦
    222           ******************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    223          char s_read_statusreg(unsigned char *p_value, unsigned char *p_checksum)
   \                     s_read_statusreg:
    224          {
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   8C..         MOV     ?V0 + 0,R4
   \   00000B   8D..         MOV     ?V0 + 1,R5
    225            unsigned char error=0;
    226          
    227            s_transstart();                             // ·¢ËÍÒ»¸ö"Æô¶¯´«Êä"ÐòÁÐ
   \   00000D                ; Setup parameters for call to function s_transstart
   \   00000D   12....       LCALL   ??s_transstart?relay
    228            error=s_write_byte(STATUS_REG_R);           // ·¢ËÍ"¶Á×´Ì¬¼Ä´æÆ÷"ÃüÁî
   \   000010                ; Setup parameters for call to function s_write_byte
   \   000010   7907         MOV     R1,#0x7
   \   000012   12....       LCALL   ??s_write_byte?relay
   \   000015   E9           MOV     A,R1
   \   000016   F5..         MOV     ?V0 + 2,A
    229            *p_value=s_read_byte(ACK);                  // ¶Á×´Ì¬¼Ä´æÆ÷
   \   000018                ; Setup parameters for call to function s_read_byte
   \   000018   7901         MOV     R1,#0x1
   \   00001A   12....       LCALL   ??s_read_byte?relay
   \   00001D   E9           MOV     A,R1
   \   00001E   8E82         MOV     DPL,R6
   \   000020   8F83         MOV     DPH,R7
   \   000022   F0           MOVX    @DPTR,A
    230            *p_checksum=s_read_byte(noACK);             // ¶ÁÐ£ÑéºÍ
   \   000023                ; Setup parameters for call to function s_read_byte
   \   000023   7900         MOV     R1,#0x0
   \   000025   12....       LCALL   ??s_read_byte?relay
   \   000028   E9           MOV     A,R1
   \   000029   85..82       MOV     DPL,?V0 + 0
   \   00002C   85..83       MOV     DPH,?V0 + 1
   \   00002F   F0           MOVX    @DPTR,A
    231          
    232            return error;                               // error=1±íÊ¾SHT11Î´ÏìÓ¦
   \   000030   A9..         MOV     R1,?V0 + 2
   \   000032   7F03         MOV     R7,#0x3
   \   000034   02....       LJMP    ?BANKED_LEAVE_XDATA
    233          }
    234          
    235          
    236          /*******************************************************************************
    237           * º¯ÊýÃû³Æ£ºs_write_statusreg
    238           *
    239           * ¹¦ÄÜÃèÊö£ºÐ´×´Ì¬¼Ä´æÆ÷
    240           *
    241           * ²Î    Êý£ºp_value      ×´Ì¬¼Ä´æÆ÷µÄÖµ
    242           *
    243           * ·µ »Ø Öµ£º·µ»ØÖµÎª1±íÊ¾SHT11Î´ÏìÓ¦
    244           ******************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    245          char s_write_statusreg(unsigned char *p_value)
   \                     s_write_statusreg:
    246          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    247            unsigned char error=0;
    248          
    249            s_transstart();                              // ·¢ËÍÒ»¸ö"Æô¶¯´«Êä"ÐòÁÐ
   \   000009                ; Setup parameters for call to function s_transstart
   \   000009   12....       LCALL   ??s_transstart?relay
    250            error+=s_write_byte(STATUS_REG_W);           // ·¢ËÍ"Ð´×´Ì¬¼Ä´æÆ÷"ÃüÁî
   \   00000C                ; Setup parameters for call to function s_write_byte
   \   00000C   7906         MOV     R1,#0x6
   \   00000E   12....       LCALL   ??s_write_byte?relay
   \   000011   E9           MOV     A,R1
   \   000012   F5..         MOV     ?V0 + 0,A
    251            error+=s_write_byte(*p_value);               // Ð´×´Ì¬¼Ä´æÆ÷
    252          
    253            return error;                                // error=1±íÊ¾SHT11Î´ÏìÓ¦
   \   000014                ; Setup parameters for call to function s_write_byte
   \   000014   8E82         MOV     DPL,R6
   \   000016   8F83         MOV     DPH,R7
   \   000018   E0           MOVX    A,@DPTR
   \   000019   F9           MOV     R1,A
   \   00001A   12....       LCALL   ??s_write_byte?relay
   \   00001D   E9           MOV     A,R1
   \   00001E   25..         ADD     A,?V0 + 0
   \   000020   F9           MOV     R1,A
   \   000021   7F01         MOV     R7,#0x1
   \   000023   02....       LJMP    ?BANKED_LEAVE_XDATA
    254          }
    255          
    256          
    257          /*******************************************************************************
    258           * º¯ÊýÃû³Æ£ºs_measure
    259           *
    260           * ¹¦ÄÜÃèÊö£º½øÐÐÒ»´Î²âÁ¿(Ïà¶ÔÊª¶È»òÎÂ¶È)
    261           *
    262           * ²Î    Êý£ºp_value      ²âÁ¿Öµ
    263           *           checksum     Ð£ÑéºÍ
    264           *           mode         TEMP±íÊ¾½øÐÐÎÂ¶È²âÁ¿
    265           *                        HUMI±íÊ¾½øÐÐÏà¶ÔÊª¶È²âÁ¿
    266           *
    267           * ·µ »Ø Öµ£º·µ»ØÖµÎª1±íÊ¾SHT11Î´ÏìÓ¦
    268           ******************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    269          char s_measure(char *p_value,unsigned char *p_checksum, unsigned char mode)
   \                     s_measure:
    270          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
   \   000009   8C..         MOV     ?V0 + 2,R4
   \   00000B   8D..         MOV     ?V0 + 3,R5
   \   00000D   E9           MOV     A,R1
   \   00000E   FF           MOV     R7,A
    271            unsigned char error=0;
   \   00000F   7E00         MOV     R6,#0x0
    272            unsigned long i;
    273          
    274            s_transstart();                              // ·¢ËÍÒ»¸ö"Æô¶¯´«Êä"ÐòÁÐ
   \   000011                ; Setup parameters for call to function s_transstart
   \   000011   12....       LCALL   ??s_transstart?relay
    275            switch(mode)                                 // ¸ù¾ÝÊäÈë²ÎÊýmode½øÐÐÒ»´ÎÏàÓ¦µÄ²âÁ¿
   \   000014   EF           MOV     A,R7
   \   000015   6005         JZ      ??s_measure_0
   \   000017   14           DEC     A
   \   000018   6006         JZ      ??s_measure_1
   \   00001A   800B         SJMP    ??s_measure_2
    276            {
    277              case TEMP	: error+=s_write_byte(MEASURE_TEMP); break;
   \                     ??s_measure_0:
   \   00001C                ; Setup parameters for call to function s_write_byte
   \   00001C   7903         MOV     R1,#0x3
   \   00001E   8002         SJMP    ??s_measure_3
    278              case HUMI	: error+=s_write_byte(MEASURE_HUMI); break;
   \                     ??s_measure_1:
   \   000020                ; Setup parameters for call to function s_write_byte
   \   000020   7905         MOV     R1,#0x5
   \                     ??s_measure_3:
   \   000022   12....       LCALL   ??s_write_byte?relay
   \   000025   E9           MOV     A,R1
   \   000026   FE           MOV     R6,A
    279              default     : break;	
    280            }
    281            //for(i=0;i<65500;i++ )  asm("nop"); 
    282            for (i=0;i<665535;i++) if(DATA==0) break;    // µÈ´ýSHT11Íê³É²âÁ¿
   \                     ??s_measure_2:
   \   000027   75..BF       MOV     ?V0 + 4,#-0x41
   \   00002A   75..27       MOV     ?V0 + 5,#0x27
   \   00002D   75..0A       MOV     ?V0 + 6,#0xa
   \   000030   75..00       MOV     ?V0 + 7,#0x0
   \                     ??s_measure_4:
   \   000033   A281         MOV     C,0x80.1
   \   000035   5012         JNC     ??s_measure_5
   \   000037   90....       MOV     DPTR,#__Constant_ffffffff
   \   00003A   78..         MOV     R0,#?V0 + 4
   \   00003C   12....       LCALL   ?L_ADD_X
   \   00003F   E5..         MOV     A,?V0 + 4
   \   000041   45..         ORL     A,?V0 + 5
   \   000043   45..         ORL     A,?V0 + 6
   \   000045   45..         ORL     A,?V0 + 7
   \   000047   70EA         JNZ     ??s_measure_4
    283            if(DATA) error+=1;                           // ²âÁ¿´íÎó
   \                     ??s_measure_5:
   \   000049   A281         MOV     C,0x80.1
   \   00004B   5001         JNC     ??s_measure_6
   \   00004D   0E           INC     R6
    284            //for(i=0;i<65500;i++ )  asm("nop"); 
    285            *(p_value+1) = s_read_byte(ACK);             // ¶ÁµÚ1¸ö×Ö½Ú (MSB)
   \                     ??s_measure_6:
   \   00004E                ; Setup parameters for call to function s_read_byte
   \   00004E   7901         MOV     R1,#0x1
   \   000050   12....       LCALL   ??s_read_byte?relay
   \   000053   E9           MOV     A,R1
   \   000054   85..82       MOV     DPL,?V0 + 0
   \   000057   85..83       MOV     DPH,?V0 + 1
   \   00005A   A3           INC     DPTR
   \   00005B   F0           MOVX    @DPTR,A
    286            //for(i=0;i<65500;i++ )  asm("nop"); 
    287            *(p_value) = s_read_byte(ACK);               // ¶ÁµÚ2¸ö×Ö½Ú (LSB)
   \   00005C                ; Setup parameters for call to function s_read_byte
   \   00005C   7901         MOV     R1,#0x1
   \   00005E   12....       LCALL   ??s_read_byte?relay
   \   000061   E9           MOV     A,R1
   \   000062   85..82       MOV     DPL,?V0 + 0
   \   000065   85..83       MOV     DPH,?V0 + 1
   \   000068   F0           MOVX    @DPTR,A
    288            //for(i=0;i<65500;i++ )  asm("nop"); 
    289            *p_checksum =s_read_byte(noACK);             // ¶ÁÐ£ÑéºÍ
   \   000069                ; Setup parameters for call to function s_read_byte
   \   000069   7900         MOV     R1,#0x0
   \   00006B   12....       LCALL   ??s_read_byte?relay
   \   00006E   E9           MOV     A,R1
   \   00006F   85..82       MOV     DPL,?V0 + 2
   \   000072   85..83       MOV     DPH,?V0 + 3
   \   000075   F0           MOVX    @DPTR,A
    290          
    291            return error;
   \   000076   EE           MOV     A,R6
   \   000077   F9           MOV     R1,A
   \   000078   7F08         MOV     R7,#0x8
   \   00007A   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   00007D                REQUIRE _A_P0
    292          }
    293          
    294          
    295          /*******************************************************************************
    296           * º¯ÊýÃû³Æ£ºcalc_sth11
    297           *
    298           * ¹¦ÄÜÃèÊö£º¼ÆËãÏà¶ÔÊª¶ÈºÍÎÂ¶È
    299           *
    300           * ²Î    Êý£ºp_humidity      SHT11²É¼¯µ½µÄÏà¶ÔÊª¶ÈÖµ(¾­¹ý±¾º¯ÊýµÄ×ª»»£¬¸Ã²ÎÊý·µ»ØÊµ¼ÊÎïÀíÁ¿µÄÖµ)
    301           *           p_temperature   SHT11²É¼¯µ½µÄÎÂ¶ÈÖµ(¾­¹ý±¾º¯ÊýµÄ×ª»»£¬¸Ã²ÎÊý·µ»ØÊµ¼ÊÎïÀíÁ¿µÄÖµ)
    302           *
    303           * ·µ »Ø Öµ£ºÎÞ
    304           ******************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    305          void calc_sth11(float *p_humidity ,float *p_temperature)
   \                     calc_sth11:
    306          {
   \   000000   74E8         MOV     A,#-0x18
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 24
   \   000005                ; Auto size: 6
   \   000005   74FA         MOV     A,#-0x6
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   85..82       MOV     DPL,?XSP + 0
   \   00000D   85..83       MOV     DPH,?XSP + 1
   \   000010   EA           MOV     A,R2
   \   000011   F0           MOVX    @DPTR,A
   \   000012   A3           INC     DPTR
   \   000013   EB           MOV     A,R3
   \   000014   F0           MOVX    @DPTR,A
   \   000015   EC           MOV     A,R4
   \   000016   FE           MOV     R6,A
   \   000017   ED           MOV     A,R5
   \   000018   FF           MOV     R7,A
    307            const float C1=-4.0;                          // 12Î»
    308            const float C2=+0.0405;                       // 12 Bit
    309            const float C3=-0.0000028;                    // 12 Bit
    310            const float T1=+0.01;                         // 14Î» 5V
    311            const float T2=+0.00008;                      // 14Î» 5V	
    312          
    313            float rh=*p_humidity;                         // Ïà¶ÔÊª¶È²É¼¯Öµ 12Î»
   \   000019   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_7:
   \   00001C   78..         MOV     R0,#?V0 + 4
   \   00001E   12....       LCALL   ?L_MOV_X
    314            float t=*p_temperature;                       // ÎÂ¶È²É¼¯Öµ 14Î»
    315            float rh_lin;                                 // Ïà¶ÔÊª¶ÈµÄ·ÇÏßÐÔ²¹³¥
    316            float rh_true;                                // Ïà¶ÔÊª¶ÈÎïÀíÁ¿Öµ
    317            float t_C;                                    // ÎÂ¶ÈÎïÀíÁ¿Öµ
    318          
    319            t_C=t*0.01 - 40;                              // ¼ÆËãÎÂ¶ÈÎïÀíÁ¿Öµ
   \   000021   8E82         MOV     DPL,R6
   \   000023   8F83         MOV     DPH,R7
   \   000025   78..         MOV     R0,#?V0 + 0
   \   000027   12....       LCALL   ?L_MOV_X
   \   00002A   90....       MOV     DPTR,#__Constant_3c23d70a
   \   00002D   78..         MOV     R0,#?V0 + 8
   \   00002F   12....       LCALL   ?L_MOV_X
   \   000032   78..         MOV     R0,#?V0 + 0
   \   000034   79..         MOV     R1,#?V0 + 8
   \   000036   12....       LCALL   ?FLT_MUL
   \   000039   90....       MOV     DPTR,#__Constant_c2200000
   \   00003C   78..         MOV     R0,#?V0 + 8
   \   00003E   12....       LCALL   ?L_MOV_X
   \   000041   78..         MOV     R0,#?V0 + 0
   \   000043   79..         MOV     R1,#?V0 + 8
   \   000045   12....       LCALL   ?FLT_ADD
   \   000048   7402         MOV     A,#0x2
   \   00004A   12....       LCALL   ?XSTACK_DISP0_8
   \   00004D   78..         MOV     R0,#?V0 + 0
   \   00004F   12....       LCALL   ?L_MOV_TO_X
    320            rh_lin=C3*rh*rh + C2*rh + C1;                 // ¼ÆËãÏà¶ÔÊª¶ÈµÄ·ÇÏßÐÔ²¹³¥
    321            rh_true=(t_C-25)*(T1+T2*rh)+rh_lin;           // ¼ÆËãÏà¶ÔÊª¶ÈÎïÀíÁ¿Öµ
   \   000052   7402         MOV     A,#0x2
   \   000054   12....       LCALL   ?XSTACK_DISP0_8
   \   000057   78..         MOV     R0,#?V0 + 8
   \   000059   12....       LCALL   ?L_MOV_X
   \   00005C   90....       MOV     DPTR,#__Constant_c1c80000
   \   00005F   78..         MOV     R0,#?V0 + 0
   \   000061   12....       LCALL   ?L_MOV_X
   \   000064   78..         MOV     R0,#?V0 + 8
   \   000066   79..         MOV     R1,#?V0 + 0
   \   000068   12....       LCALL   ?FLT_ADD
   \   00006B   85....       MOV     ?V0 + 0,?V0 + 4
   \   00006E   85....       MOV     ?V0 + 1,?V0 + 5
   \   000071   85....       MOV     ?V0 + 2,?V0 + 6
   \   000074   85....       MOV     ?V0 + 3,?V0 + 7
   \   000077   90....       MOV     DPTR,#__Constant_38a7c5ac
   \   00007A   78..         MOV     R0,#?V0 + 12
   \   00007C   12....       LCALL   ?L_MOV_X
   \   00007F   78..         MOV     R0,#?V0 + 0
   \   000081   79..         MOV     R1,#?V0 + 12
   \   000083   12....       LCALL   ?FLT_MUL
   \   000086   90....       MOV     DPTR,#__Constant_3c23d70a
   \   000089   78..         MOV     R0,#?V0 + 12
   \   00008B   12....       LCALL   ?L_MOV_X
   \   00008E   78..         MOV     R0,#?V0 + 0
   \   000090   79..         MOV     R1,#?V0 + 12
   \   000092   12....       LCALL   ?FLT_ADD
   \   000095   78..         MOV     R0,#?V0 + 8
   \   000097   79..         MOV     R1,#?V0 + 0
   \   000099   12....       LCALL   ?FLT_MUL
   \   00009C   85....       MOV     ?V0 + 0,?V0 + 4
   \   00009F   85....       MOV     ?V0 + 1,?V0 + 5
   \   0000A2   85....       MOV     ?V0 + 2,?V0 + 6
   \   0000A5   85....       MOV     ?V0 + 3,?V0 + 7
   \   0000A8   90....       MOV     DPTR,#__Constant_b63be7a2
   \   0000AB   78..         MOV     R0,#?V0 + 12
   \   0000AD   12....       LCALL   ?L_MOV_X
   \   0000B0   78..         MOV     R0,#?V0 + 0
   \   0000B2   79..         MOV     R1,#?V0 + 12
   \   0000B4   12....       LCALL   ?FLT_MUL
   \   0000B7   78..         MOV     R0,#?V0 + 0
   \   0000B9   79..         MOV     R1,#?V0 + 4
   \   0000BB   12....       LCALL   ?FLT_MUL
   \   0000BE   90....       MOV     DPTR,#__Constant_3d25e354
   \   0000C1   78..         MOV     R0,#?V0 + 12
   \   0000C3   12....       LCALL   ?L_MOV_X
   \   0000C6   78..         MOV     R0,#?V0 + 4
   \   0000C8   79..         MOV     R1,#?V0 + 12
   \   0000CA   12....       LCALL   ?FLT_MUL
   \   0000CD   78..         MOV     R0,#?V0 + 0
   \   0000CF   79..         MOV     R1,#?V0 + 4
   \   0000D1   12....       LCALL   ?FLT_ADD
   \   0000D4   90....       MOV     DPTR,#__Constant_c0800000
   \   0000D7   78..         MOV     R0,#?V0 + 4
   \   0000D9   12....       LCALL   ?L_MOV_X
   \   0000DC   78..         MOV     R0,#?V0 + 0
   \   0000DE   79..         MOV     R1,#?V0 + 4
   \   0000E0   12....       LCALL   ?FLT_ADD
   \   0000E3   78..         MOV     R0,#?V0 + 8
   \   0000E5   79..         MOV     R1,#?V0 + 0
   \   0000E7   12....       LCALL   ?FLT_ADD
    322          
    323            /* Èô¼ÆËã³öÀ´µÄÏà¶ÔÊª¶ÈÎïÀíÁ¿Öµ³¬·¶Î§Ôò½Ø¶Ï */
    324            if(rh_true>100)rh_true=100;
   \   0000EA   90....       MOV     DPTR,#__Constant_42c80001
   \   0000ED   78..         MOV     R0,#?V0 + 0
   \   0000EF   12....       LCALL   ?L_MOV_X
   \   0000F2   78..         MOV     R0,#?V0 + 8
   \   0000F4   79..         MOV     R1,#?V0 + 0
   \   0000F6   12....       LCALL   ?FLT_GE
   \   0000F9   500E         JNC     ??calc_sth11_0
   \   0000FB   75..00       MOV     ?V0 + 8,#0x0
   \   0000FE   75..00       MOV     ?V0 + 9,#0x0
   \   000101   75..C8       MOV     ?V0 + 10,#-0x38
   \   000104   75..42       MOV     ?V0 + 11,#0x42
   \   000107   801D         SJMP    ??calc_sth11_1
    325            if(rh_true<0.1)rh_true=0.1;
   \                     ??calc_sth11_0:
   \   000109   90....       MOV     DPTR,#__Constant_3dcccccd
   \   00010C   78..         MOV     R0,#?V0 + 0
   \   00010E   12....       LCALL   ?L_MOV_X
   \   000111   78..         MOV     R0,#?V0 + 8
   \   000113   79..         MOV     R1,#?V0 + 0
   \   000115   12....       LCALL   ?FLT_LT
   \   000118   500C         JNC     ??calc_sth11_1
   \   00011A   75..CD       MOV     ?V0 + 8,#-0x33
   \   00011D   75..CC       MOV     ?V0 + 9,#-0x34
   \   000120   75..CC       MOV     ?V0 + 10,#-0x34
   \   000123   75..3D       MOV     ?V0 + 11,#0x3d
    326          
    327            *p_temperature=t_C;                            // ·µ»ØÎÂ¶ÈÎïÀíÁ¿Öµ
   \                     ??calc_sth11_1:
   \   000126   7402         MOV     A,#0x2
   \   000128   12....       LCALL   ?XSTACK_DISP0_8
   \   00012B   12....       LCALL   ?XLOAD_R2345
   \   00012E   8E82         MOV     DPL,R6
   \   000130   8F83         MOV     DPH,R7
   \   000132   12....       LCALL   ?XSTORE_R2345
    328            *p_humidity=rh_true;                           // ·µ»ØÏà¶ÔÊª¶ÈÎïÀíÁ¿Öµ
   \   000135   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_8:
   \   000138   78..         MOV     R0,#?V0 + 8
   \   00013A   12....       LCALL   ?L_MOV_TO_X
    329          }
   \   00013D   7406         MOV     A,#0x6
   \   00013F   12....       LCALL   ?DEALLOC_XSTACK8
   \   000142                REQUIRE ?Subroutine2
   \   000142                ; // Fall through to label ?Subroutine2

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   7F10         MOV     R7,#0x10
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   85..82       MOV     DPL,?XSP + 0
   \   000003   85..83       MOV     DPH,?XSP + 1
   \   000006   E0           MOVX    A,@DPTR
   \   000007   F8           MOV     R0,A
   \   000008   A3           INC     DPTR
   \   000009   E0           MOVX    A,@DPTR
   \   00000A   F583         MOV     DPH,A
   \   00000C   8882         MOV     DPL,R0
   \   00000E   22           RET
    330          
    331          
    332          /*******************************************************************************
    333           * º¯ÊýÃû³Æ£ºcalc_dewpoint
    334           *
    335           * ¹¦ÄÜÃèÊö£º¼ÆËãÂ¶µã
    336           *
    337           * ²Î    Êý£ºh      Ïà¶ÔÊª¶ÈÎïÀíÁ¿Öµ
    338           *           t      ÎÂ¶ÈÎïÀíÁ¿Öµ
    339           *
    340           * ·µ »Ø Öµ£ºÂ¶µãÖµ
    341           ******************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    342          float calc_dewpoint(float h,float t)
   \                     calc_dewpoint:
    343          {
   \   000000   74E8         MOV     A,#-0x18
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 24
   \   000005                ; Auto size: 0
   \   000005   7418         MOV     A,#0x18
   \   000007   12....       LCALL   ?XSTACK_DISP0_8
   \   00000A   78..         MOV     R0,#?V0 + 8
   \   00000C   12....       LCALL   ?L_MOV_X
    344            float logEx,dew_point;
    345          
    346            logEx=0.66077+7.5*t/(237.3+t)+(log10(h)-2);
   \   00000F   85....       MOV     ?V0 + 4,?V0 + 8
   \   000012   85....       MOV     ?V0 + 5,?V0 + 9
   \   000015   85....       MOV     ?V0 + 6,?V0 + 10
   \   000018   85....       MOV     ?V0 + 7,?V0 + 11
   \   00001B   90....       MOV     DPTR,#__Constant_40f00000
   \   00001E   78..         MOV     R0,#?V0 + 12
   \   000020   12....       LCALL   ?L_MOV_X
   \   000023   78..         MOV     R0,#?V0 + 4
   \   000025   79..         MOV     R1,#?V0 + 12
   \   000027   12....       LCALL   ?FLT_MUL
   \   00002A   90....       MOV     DPTR,#__Constant_436d4ccd
   \   00002D   78..         MOV     R0,#?V0 + 12
   \   00002F   12....       LCALL   ?L_MOV_X
   \   000032   78..         MOV     R0,#?V0 + 8
   \   000034   79..         MOV     R1,#?V0 + 12
   \   000036   12....       LCALL   ?FLT_ADD
   \   000039   78..         MOV     R0,#?V0 + 4
   \   00003B   79..         MOV     R1,#?V0 + 8
   \   00003D   12....       LCALL   ?FLT_DIV
   \   000040   90....       MOV     DPTR,#__Constant_3f292839
   \   000043   78..         MOV     R0,#?V0 + 8
   \   000045   12....       LCALL   ?L_MOV_X
   \   000048   78..         MOV     R0,#?V0 + 4
   \   00004A   79..         MOV     R1,#?V0 + 8
   \   00004C   12....       LCALL   ?FLT_ADD
   \   00004F                ; Setup parameters for call to function log10
   \   00004F   12....       LCALL   ??log10?relay
   \   000052   8A..         MOV     ?V0 + 0,R2
   \   000054   8B..         MOV     ?V0 + 1,R3
   \   000056   8C..         MOV     ?V0 + 2,R4
   \   000058   8D..         MOV     ?V0 + 3,R5
   \   00005A   90....       MOV     DPTR,#__Constant_c0000000
   \   00005D   78..         MOV     R0,#?V0 + 8
   \   00005F   12....       LCALL   ?L_MOV_X
   \   000062   78..         MOV     R0,#?V0 + 0
   \   000064   79..         MOV     R1,#?V0 + 8
   \   000066   12....       LCALL   ?FLT_ADD
   \   000069   78..         MOV     R0,#?V0 + 4
   \   00006B   79..         MOV     R1,#?V0 + 0
   \   00006D   12....       LCALL   ?FLT_ADD
    347            dew_point = (logEx - 0.66077)*237.3/(0.66077+7.5-logEx);
    348          
    349            return dew_point;
   \   000070   85....       MOV     ?V0 + 0,?V0 + 4
   \   000073   85....       MOV     ?V0 + 1,?V0 + 5
   \   000076   85....       MOV     ?V0 + 2,?V0 + 6
   \   000079   85....       MOV     ?V0 + 3,?V0 + 7
   \   00007C   90....       MOV     DPTR,#__Constant_bf292839
   \   00007F   78..         MOV     R0,#?V0 + 8
   \   000081   12....       LCALL   ?L_MOV_X
   \   000084   78..         MOV     R0,#?V0 + 0
   \   000086   79..         MOV     R1,#?V0 + 8
   \   000088   12....       LCALL   ?FLT_ADD
   \   00008B   90....       MOV     DPTR,#__Constant_436d4ccd
   \   00008E   78..         MOV     R0,#?V0 + 8
   \   000090   12....       LCALL   ?L_MOV_X
   \   000093   78..         MOV     R0,#?V0 + 0
   \   000095   79..         MOV     R1,#?V0 + 8
   \   000097   12....       LCALL   ?FLT_MUL
   \   00009A   75..84       MOV     ?V0 + 8,#-0x7c
   \   00009D   75..92       MOV     ?V0 + 9,#-0x6e
   \   0000A0   75..02       MOV     ?V0 + 10,#0x2
   \   0000A3   75..41       MOV     ?V0 + 11,#0x41
   \   0000A6   78..         MOV     R0,#?V0 + 8
   \   0000A8   79..         MOV     R1,#?V0 + 4
   \   0000AA   12....       LCALL   ?FLT_SUB
   \   0000AD   78..         MOV     R0,#?V0 + 0
   \   0000AF   79..         MOV     R1,#?V0 + 8
   \   0000B1   12....       LCALL   ?FLT_DIV
   \   0000B4   AA..         MOV     R2,?V0 + 0
   \   0000B6   AB..         MOV     R3,?V0 + 1
   \   0000B8   AC..         MOV     R4,?V0 + 2
   \   0000BA   AD..         MOV     R5,?V0 + 3
   \   0000BC   02....       LJMP    ?Subroutine2 & 0xFFFF
    350          }

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_ffffffff:
   \   000000   FFFFFFFF     DD 4294967295

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_3c23d70a:
   \   000000   0AD7233C     DD 3C23D70AH

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_c2200000:
   \   000000   000020C2     DD 0C2200000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_c1c80000:
   \   000000   0000C8C1     DD 0C1C80000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_38a7c5ac:
   \   000000   ACC5A738     DD 38A7C5ACH

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_b63be7a2:
   \   000000   A2E73BB6     DD 0B63BE7A2H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_3d25e354:
   \   000000   54E3253D     DD 3D25E354H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_c0800000:
   \   000000   000080C0     DD 0C0800000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_42c80001:
   \   000000   0100C842     DD 42C80001H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_3dcccccd:
   \   000000   CDCCCC3D     DD 3DCCCCCDH

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_40f00000:
   \   000000   0000F040     DD 40F00000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_436d4ccd:
   \   000000   CD4C6D43     DD 436D4CCDH

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_3f292839:
   \   000000   3928293F     DD 3F292839H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_c0000000:
   \   000000   000000C0     DD 0C0000000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_bf292839:
   \   000000   392829BF     DD 0BF292839H

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Hal_SHT11_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Hal_SHT11_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??s_write_byte?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    s_write_byte

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??s_read_byte?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    s_read_byte

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??s_transstart?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    s_transstart

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??s_connectionreset?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    s_connectionreset

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??s_softreset?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    s_softreset

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??s_read_statusreg?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    s_read_statusreg

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??s_write_statusreg?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    s_write_statusreg

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??s_measure?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    s_measure

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??calc_sth11?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    calc_sth11

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??calc_dewpoint?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    calc_dewpoint
    351          
    352          
    353          
    354          
    355          
    356          
    357          
    358          
    359          
    360          
    361          
    362          
    363          
    364          
    365          
    366          
    367          
    368          
    369          
    370          
    371          
    372          

   Maximum stack usage in bytes:

   ISTACK PSTACK XSTACK Function
   ------ ------ ------ --------
       0      0      0  Hal_SHT11_Init
       0      0     28  calc_dewpoint
                          0 0 24 -> log10
       0      0     30  calc_sth11
       2      0      0  s_connectionreset
                          2 0  0 -> s_transstart
       1      0     16  s_measure
                          0 0 16 -> s_read_byte
                          0 0 16 -> s_transstart
                          0 0 16 -> s_write_byte
       0      0     16  s_read_byte
       1      0     11  s_read_statusreg
                          0 0 11 -> s_read_byte
                          0 0 11 -> s_transstart
                          0 0 11 -> s_write_byte
       2      0      0  s_softreset
                          2 0  0 -> s_connectionreset
                          2 0  0 -> s_write_byte
       0      0     16  s_transstart
       2      0     16  s_write_byte
       0      0      9  s_write_statusreg
                          0 0  9 -> s_transstart
                          0 0  9 -> s_write_byte


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       6  ??Hal_SHT11_Init?relay
       6  ??calc_dewpoint?relay
       6  ??calc_sth11?relay
       6  ??s_connectionreset?relay
       6  ??s_measure?relay
       6  ??s_read_byte?relay
       6  ??s_read_statusreg?relay
       6  ??s_softreset?relay
       6  ??s_transstart?relay
       6  ??s_write_byte?relay
       6  ??s_write_statusreg?relay
       7  ?Subroutine0
       5  ?Subroutine1
       5  ?Subroutine2
       6  ?Subroutine3
       7  ?Subroutine4
      15  ?Subroutine5
       9  Hal_SHT11_Init
       1  P0DIR
       1  P1DIR
       1  P1SEL
       1  _A_P0
       1  _A_P1
       4  __Constant_38a7c5ac
       4  __Constant_3c23d70a
       4  __Constant_3d25e354
       4  __Constant_3dcccccd
       4  __Constant_3f292839
       4  __Constant_40f00000
       4  __Constant_42c80001
       4  __Constant_436d4ccd
       4  __Constant_b63be7a2
       4  __Constant_bf292839
       4  __Constant_c0000000
       4  __Constant_c0800000
       4  __Constant_c1c80000
       4  __Constant_c2200000
       4  __Constant_ffffffff
     191  calc_dewpoint
     322  calc_sth11
       1  error
       1  i
       1  j
      24  s_connectionreset
     125  s_measure
      83  s_read_byte
      55  s_read_statusreg
      15  s_softreset
      54  s_transstart
      86  s_write_byte
      38  s_write_statusreg

 
 1 047 bytes in segment BANKED_CODE
    66 bytes in segment BANK_RELAYS
     5 bytes in segment SFR_AN
    60 bytes in segment XDATA_ROM_C
     3 bytes in segment XDATA_Z
 
 1 113 bytes of CODE  memory
     0 bytes of CONST memory (+ 60 bytes shared)
     0 bytes of DATA  memory (+  5 bytes shared)
     3 bytes of XDATA memory

Errors: none
Warnings: none
