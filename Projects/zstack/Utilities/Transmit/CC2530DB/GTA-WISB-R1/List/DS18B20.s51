///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.20.2.41139 for 8051            15/Aug/2016  19:57:14 /
// Copyright 2004-2013 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//                                                                            /
//    Source file        =  D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\P /
//                          rojects\zstack\Utilities\Transmit\Source\DS18B20. /
//                          c                                                 /
//    Command line       =  -f D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£ /
//                          ©\Projects\zstack\Utilities\Transmit\CC2530DB\..\ /
//                          ..\..\Tools\CC2530DB\f8wEndev.cfg (-DCPU32MHZ     /
//                          -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3        /
//                          -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f         /
//                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\P /
//                          rojects\zstack\Utilities\Transmit\CC2530DB\..\..\ /
//                          ..\Tools\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO      /
//                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR      /
//                          -DDEFAULT_CHANLIST=0x00001000                     /
//                          -DZDAPP_CONFIG_PAN_ID=0x1178                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=3           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=2   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=TRUE -DPOLL_RATE=1000        /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 D:\work\ZSTACK-GTAMODBUS-Ö /
//                          ÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Projects\zstack\Utilities\T /
//                          ransmit\Source\DS18B20.c -D NWK_AUTO_POLL -D      /
//                          MT_TASK -D ZTOOL_P1 -D xMT_SYS_FUNC -D            /
//                          xMT_ZDO_FUNC -D ZDNWKMGR_MIN_TRANSMISSIONS=0 -D   /
//                          GTA_DEBUG -D ZIGBEEPRO -D GTA_WISB_R1 -lC         /
//                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\P /
//                          rojects\zstack\Utilities\Transmit\CC2530DB\GTA-WI /
//                          SB-R1\List\ -lA D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´« /
//                          140707£¨Û³ÎÄ£©\Projects\zstack\Utilities\Transmit /
//                          \CC2530DB\GTA-WISB-R1\List\ --diag_suppress       /
//                          Pe001,Pa010 -o D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«1 /
//                          40707£¨Û³ÎÄ£©\Projects\zstack\Utilities\Transmit\ /
//                          CC2530DB\GTA-WISB-R1\Obj\ -e --no_code_motion     /
//                          --debug --core=plain --dptr=16,1                  /
//                          --data_model=large --code_model=banked            /
//                          --calling_convention=xdata_reentrant              /
//                          --place_constants=data_rom --nr_virtual_regs 16   /
//                          -I D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£ /
//                          ©\Projects\zstack\Utilities\Transmit\CC2530DB\    /
//                          -I D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£ /
//                          ©\Projects\zstack\Utilities\Transmit\CC2530DB\..\ /
//                          Source\ -I D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«14070 /
//                          7£¨Û³ÎÄ£©\Projects\zstack\Utilities\Transmit\CC25 /
//                          30DB\..\..\..\ZMain\TI2530DB\ -I                  /
//                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\P /
//                          rojects\zstack\Utilities\Transmit\CC2530DB\..\..\ /
//                          ..\..\..\Components\hal\include\ -I               /
//                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\P /
//                          rojects\zstack\Utilities\Transmit\CC2530DB\..\..\ /
//                          ..\..\..\Components\hal\target\CC2530EB\ -I       /
//                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\P /
//                          rojects\zstack\Utilities\Transmit\CC2530DB\..\..\ /
//                          ..\..\..\Components\mac\include\ -I               /
//                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\P /
//                          rojects\zstack\Utilities\Transmit\CC2530DB\..\..\ /
//                          ..\..\..\Components\mac\high_level\ -I            /
//                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\P /
//                          rojects\zstack\Utilities\Transmit\CC2530DB\..\..\ /
//                          ..\..\..\Components\mac\low_level\srf04\ -I       /
//                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\P /
//                          rojects\zstack\Utilities\Transmit\CC2530DB\..\..\ /
//                          ..\..\..\Components\mac\low_level\srf04\single_ch /
//                          ip\ -I D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û /
//                          ³ÎÄ£©\Projects\zstack\Utilities\Transmit\CC2530DB /
//                          \..\..\..\..\..\Components\mt\ -I                 /
//                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\P /
//                          rojects\zstack\Utilities\Transmit\CC2530DB\..\..\ /
//                          ..\..\..\Components\osal\include\ -I              /
//                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\P /
//                          rojects\zstack\Utilities\Transmit\CC2530DB\..\..\ /
//                          ..\..\..\Components\services\saddr\ -I            /
//                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\P /
//                          rojects\zstack\Utilities\Transmit\CC2530DB\..\..\ /
//                          ..\..\..\Components\services\sdata\ -I            /
//                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\P /
//                          rojects\zstack\Utilities\Transmit\CC2530DB\..\..\ /
//                          ..\..\..\Components\stack\af\ -I                  /
//                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\P /
//                          rojects\zstack\Utilities\Transmit\CC2530DB\..\..\ /
//                          ..\..\..\Components\stack\nwk\ -I                 /
//                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\P /
//                          rojects\zstack\Utilities\Transmit\CC2530DB\..\..\ /
//                          ..\..\..\Components\stack\sapi\ -I                /
//                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\P /
//                          rojects\zstack\Utilities\Transmit\CC2530DB\..\..\ /
//                          ..\..\..\Components\stack\sec\ -I                 /
//                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\P /
//                          rojects\zstack\Utilities\Transmit\CC2530DB\..\..\ /
//                          ..\..\..\Components\stack\sys\ -I                 /
//                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\P /
//                          rojects\zstack\Utilities\Transmit\CC2530DB\..\..\ /
//                          ..\..\..\Components\stack\zdo\ -I                 /
//                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\P /
//                          rojects\zstack\Utilities\Transmit\CC2530DB\..\..\ /
//                          ..\..\..\Components\zmac\ -I                      /
//                          D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\P /
//                          rojects\zstack\Utilities\Transmit\CC2530DB\..\..\ /
//                          ..\..\..\Components\zmac\f8w\ -Ohz                /
//                          --require_prototypes                              /
//    List file          =  D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\P /
//                          rojects\zstack\Utilities\Transmit\CC2530DB\GTA-WI /
//                          SB-R1\List\DS18B20.s51                            /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME DS18B20

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?S_SHL
        EXTERN ?US_DIV_MOD
        EXTERN ?V0
        EXTERN __INIT_XDATA_Z

        PUBLIC ??DataChange?relay
        FUNCTION ??DataChange?relay,0203H
        PUBLIC ??Delay_nus?relay
        FUNCTION ??Delay_nus?relay,0203H
        PUBLIC ??init_1820?relay
        FUNCTION ??init_1820?relay,0203H
        PUBLIC ??read_1820?relay
        FUNCTION ??read_1820?relay,0203H
        PUBLIC ??read_data?relay
        FUNCTION ??read_data?relay,0203H
        PUBLIC ??write_1820?relay
        FUNCTION ??write_1820?relay,0203H
        PUBLIC DataChange
        FUNCTION DataChange,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC Delay_nus
        FUNCTION Delay_nus,080203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUBWEAK P0DIR
        PUBWEAK _A_P0
        PUBLIC ch
        PUBLIC init_1820
        FUNCTION init_1820,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC read_1820
        FUNCTION read_1820,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC read_data
        FUNCTION read_data,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC sensor_data_values
        PUBLIC write_1820
        FUNCTION write_1820,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
DataChange          SYMBOL "DataChange"
??DataChange?relay  SYMBOL "?relay", DataChange
Delay_nus           SYMBOL "Delay_nus"
??Delay_nus?relay   SYMBOL "?relay", Delay_nus
init_1820           SYMBOL "init_1820"
??init_1820?relay   SYMBOL "?relay", init_1820
read_1820           SYMBOL "read_1820"
??read_1820?relay   SYMBOL "?relay", read_1820
read_data           SYMBOL "read_data"
??read_data?relay   SYMBOL "?relay", read_data
write_1820          SYMBOL "write_1820"
??write_1820?relay  SYMBOL "?relay", write_1820

// D:\work\ZSTACK-GTAMODBUS-Ö÷¶¯ÉÏ´«140707£¨Û³ÎÄ£©\Projects\zstack\Utilities\Transmit\Source\DS18B20.c
//    1 #include "DS18B20.h"

        ASEGN SFR_AN:DATA:NOROOT,080H
// union <unnamed> volatile __sfr _A_P0
_A_P0:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0fdH
// unsigned char volatile __sfr P0DIR
P0DIR:
        DATA8
        DS 1
//    2 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//    3 unsigned char sensor_data_values[2];
sensor_data_values:
        DS 2
        REQUIRE __INIT_XDATA_Z
//    4 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//    5 void Delay_nus( uint16 s ){
Delay_nus:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function Delay_nus
        CODE
        ; Saved register size: 0
        ; Auto size: 0
        SJMP    ??Delay_nus_0
//    6     while ( s-- ) {
//    7         asm("NOP");
??Delay_nus_1:
        NOP
//    8         asm("NOP");
        NOP
//    9         asm("NOP");
        NOP
//   10     }
??Delay_nus_0:
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
        MOV     A,R0
        ADD     A,#-0x1
        DEC     R2
        MOV     A,R1
        ADDC    A,#-0x1
        MOV     R3,A
        MOV     A,R0
        ORL     A,R1
        JNZ     ??Delay_nus_1
//   11 }
        LJMP    ?BRET
          CFI EndBlock cfiBlock0
//   12 
//   13 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   14 void write_1820 ( unsigned char x ){
write_1820:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function write_1820
        CODE
        FUNCALL write_1820, Delay_nus
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R1
        MOV     R7,A
//   15     unsigned char m;
//   16     SET_OUT;
        ORL     0xfd,#0x2
//   17     for(m = 0; m < 8; m++){
        MOV     R6,#0x0
//   18         CL_DQ;
??write_1820_0:
        CLR     0x80.1
//   19         if(x&(1<<m)){
        MOV     ?V0 + 0,#0x1
        MOV     ?V0 + 1,#0x0
        MOV     A,R6
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        MOV     A,?V0 + 0
        ANL     A,R7
        JZ      ??write_1820_1
//   20             SET_DQ;
        SETB    0x80.1
        SJMP    ??write_1820_2
//   21         } else {
//   22             CL_DQ;
??write_1820_1:
        CLR     0x80.1
//   23         }
//   24         Delay_nus(55);   //50~60us
??write_1820_2:
        ; Setup parameters for call to function Delay_nus
        MOV     R2,#0x37
        MOV     R3,#0x0
        LCALL   ??Delay_nus?relay
//   25         SET_DQ;
        SETB    0x80.1
//   26     }
        INC     R6
        MOV     A,R6
        CLR     C
        SUBB    A,#0x8
        JC      ??write_1820_0
//   27 }
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock1
        REQUIRE P0DIR
        REQUIRE _A_P0
//   28 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   29 unsigned char read_1820(void){
read_1820:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function read_1820
        CODE
        FUNCALL read_1820, Delay_nus
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
//   30     unsigned char temp, k, n;
//   31     temp = 0;
        MOV     ?V0 + 0,#0x0
//   32     for(n = 0; n < 8; n++){
        MOV     R6,#0x0
//   33         CL_DQ;
??read_1820_0:
        CLR     0x80.1
//   34         SET_DQ;
        SETB    0x80.1
//   35         SET_IN;
        ANL     0xfd,#0xfd
//   36         k = IN_DQ;  //¶ÁÊý¾Ý´ÓµÍÎ»¿ªÊ¼
//   37         if(k){
        MOV     C,0x80.1
        MOV     ?V0 + 2,#0x1
        MOV     ?V0 + 3,#0x0
        MOV     A,R6
        MOV     R0,#?V0 + 2
        JNC     ??read_1820_1
//   38             temp |= (1<<n);
        LCALL   ?S_SHL
        MOV     A,?V0 + 2
        ORL     ?V0 + 0,A
        SJMP    ??read_1820_2
//   39         } else {
//   40             temp &= ~(1 << n);
??read_1820_1:
        LCALL   ?S_SHL
        MOV     A,?V0 + 2
        CPL     A
        ANL     ?V0 + 0,A
//   41         }
//   42         Delay_nus(70);
??read_1820_2:
        ; Setup parameters for call to function Delay_nus
        MOV     R2,#0x46
        MOV     R3,#0x0
        LCALL   ??Delay_nus?relay
//   43         SET_OUT;
        ORL     0xfd,#0x2
//   44     }
        INC     R6
        MOV     A,R6
        CLR     C
        SUBB    A,#0x8
        JC      ??read_1820_0
//   45     return (temp);
        MOV     R1,?V0 + 0
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock2
        REQUIRE _A_P0
        REQUIRE P0DIR
//   46 }
//   47 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   48 bool init_1820(void){
init_1820:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function init_1820
        CODE
        FUNCALL init_1820, Delay_nus
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL init_1820, Delay_nus
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL init_1820, Delay_nus
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//   49     int i = 0;
//   50     IO_DIR_PORT_PIN(0, 1, IO_OUT);
        ORL     0xfd,#0x2
//   51 //    P0_1=1;
//   52 //    P0_1=0;
//   53     SET_OUT;
        ORL     0xfd,#0x2
//   54     SET_DQ;
        SETB    0x80.1
//   55     CL_DQ;
        CLR     0x80.1
//   56 //    Onboard_wait(550);
//   57     Delay_nus(700); //À­µÍÒ»¶ÎÊ±¼ä
        ; Setup parameters for call to function Delay_nus
        MOV     R2,#-0x44
        MOV     R3,#0x2
        LCALL   ??Delay_nus?relay
//   58 //    P0_1 = 1;
//   59 //    IO_DIR_PORT_PIN(0, 1, IO_IN);
//   60     //for(i = 0; i < 10 ; i++);
//   61     //   asm("nop");
//   62     //Delay_nus(200);
//   63     //Delay_nus(200);
//   64     SET_DQ;//ÊÍ·Å
        SETB    0x80.1
//   65     SET_IN;//ÊäÈë
        ANL     0xfd,#0xfd
//   66     Delay_nus(40);//ÊÍ·Å×ÜÏßºóµÈ´ý15~240us
        ; Setup parameters for call to function Delay_nus
        MOV     R2,#0x28
        MOV     R3,#0x0
        LCALL   ??Delay_nus?relay
//   67     while(IN_DQ){;}//µÈ´ý18b20»Ø¸´
??init_1820_0:
        MOV     C,0x80.1
        JC      ??init_1820_0
//   68     Delay_nus(240);//»Ø¸´µÄµÍµçÆ½ÔÚ60µ½240us
        ; Setup parameters for call to function Delay_nus
        MOV     R2,#-0x10
        MOV     R3,#0x0
        LCALL   ??Delay_nus?relay
//   69     SET_OUT;
        ORL     0xfd,#0x2
//   70     SET_DQ;//»Øµ½³õÊ¼DQ=1
        SETB    0x80.1
//   71     return 1;
        MOV     R1,#0x1
          CFI EndBlock cfiBlock3
        REQUIRE ?Subroutine0
        REQUIRE P0DIR
        REQUIRE _A_P0
        ; // Fall through to label ?Subroutine0
//   72 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock4 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+-5
          CFI DPL0 Frame(CFA_SP, 4)
          CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
          CFI CFA_SP SP+-4
          CFI DPH0 SameValue
        POP     DPL
          CFI CFA_SP SP+-3
          CFI DPL0 SameValue
        LJMP    ?BRET
          CFI EndBlock cfiBlock4
//   73 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   74 void read_data(void){
read_data:
          CFI Block cfiBlock5 Using cfiCommon0
          CFI Function read_data
        CODE
        FUNCALL read_data, init_1820
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL read_data, write_1820
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL read_data, write_1820
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL read_data, Delay_nus
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL read_data, init_1820
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL read_data, write_1820
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL read_data, write_1820
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL read_data, read_1820
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL read_data, read_1820
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
//   75     unsigned int j;
//   76     unsigned char temph, templ;
//   77     unsigned char a, b, c;
//   78     init_1820();
        ; Setup parameters for call to function init_1820
        LCALL   ??init_1820?relay
//   79     write_1820(0xcc);
        ; Setup parameters for call to function write_1820
        MOV     R1,#-0x34
        LCALL   ??write_1820?relay
//   80     write_1820(0x44);
        ; Setup parameters for call to function write_1820
        MOV     R1,#0x44
        LCALL   ??write_1820?relay
//   81     for(j = 20; j > 1; j--){
        MOV     R6,#0x13
//   82         Delay_nus(50000);
??read_data_0:
        ; Setup parameters for call to function Delay_nus
        MOV     R2,#0x50
        MOV     R3,#-0x3d
        LCALL   ??Delay_nus?relay
//   83     }
        DEC     R6
        MOV     A,R6
        JNZ     ??read_data_0
//   84     init_1820();
        ; Setup parameters for call to function init_1820
        LCALL   ??init_1820?relay
//   85     write_1820(0xcc);
        ; Setup parameters for call to function write_1820
        MOV     R1,#-0x34
        LCALL   ??write_1820?relay
//   86     write_1820(0xbe);
        ; Setup parameters for call to function write_1820
        MOV     R1,#-0x42
        LCALL   ??write_1820?relay
//   87     
//   88     templ = read_1820();
        ; Setup parameters for call to function read_1820
        LCALL   ??read_1820?relay
        MOV     A,R1
        MOV     R6,A
//   89     temph = read_1820();
        ; Setup parameters for call to function read_1820
        LCALL   ??read_1820?relay
//   90     a = temph << 4;
//   91     a+=(templ&0xf0) >> 4;
//   92     b = templ & 0x0f;
//   93     temph = a;
//   94     templ = b & 0x00ff;
//   95     sensor_data_values[0] = templ;
        MOV     A,#0xf
        ANL     A,R6
        MOV     DPTR,#sensor_data_values
        MOVX    @DPTR,A
//   96     sensor_data_values[1] = temph;
        MOV     A,R6
        SWAP    A
        ANL     A,#0xf
        MOV     R0,A
        MOV     A,R1
        SWAP    A
        ANL     A,#0xf0
        ADD     A,R0
        INC     DPTR
        MOVX    @DPTR,A
//   97 }
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock5
//   98 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//   99 uint8 ch[2];
ch:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  100 uint8* DataChange(void){
DataChange:
          CFI Block cfiBlock6 Using cfiCommon0
          CFI Function DataChange
        CODE
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  101     unsigned char temph, templ;
//  102     unsigned int num;
//  103 //    unsigned i;
//  104     templ = sensor_data_values[0];
//  105     temph = sensor_data_values[1];
//  106     ch[0] = temph;
        MOV     DPTR,#sensor_data_values + 1
        MOVX    A,@DPTR
        MOV     DPTR,#ch
        MOVX    @DPTR,A
//  107     num = templ*625;    //Ð¡Êý²¿·ÖµÄÈ¡ÖµÃ¿Î»´ú±í0.0625£¨¾«¶È£©
//  108     ch[1] = num/1000;
        MOV     DPTR,#sensor_data_values
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     B,#0x71
        MUL     AB
        XCH     A,R0
        MOV     R2,B
        MOV     B,#0x2
        MUL     AB
        ADD     A,R2
        MOV     R1,A
        MOV     R2,#-0x18
        MOV     R3,#0x3
        LCALL   ?US_DIV_MOD
        MOV     A,R0
        MOV     DPTR,#ch + 1
        MOVX    @DPTR,A
//  109     /*if(temph/100==0){
//  110         ch[0] = 1;
//  111     } else {
//  112         ch[0] = temph/100+0x30;
//  113     }
//  114     if((temph%100/10==0)){
//  115         ch[1] = 0;
//  116     } else {
//  117         ch[1] = temph%100/10 + 0x30;
//  118     }
//  119     ch[2] = temph%10 + 0x30;
//  120     ch[3] = '.';
//  121     ch[4] = num/1000 + 0x30;
//  122     ch[5] = '\0';*/
//  123     return ch;
        MOV     R2,#ch & 0xff
        MOV     R3,#(ch >> 8) & 0xff
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock6
//  124 }

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Delay_nus?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    Delay_nus

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??write_1820?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    write_1820

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??read_1820?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    read_1820

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??init_1820?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    init_1820

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??read_data?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    read_data

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??DataChange?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    DataChange

        END
//  125 
//  126 
//  127 
//  128 
//  129 
//  130 
//  131 
//  132 
//  133 
// 
// 336 bytes in segment BANKED_CODE
//  36 bytes in segment BANK_RELAYS
//   2 bytes in segment SFR_AN
//   4 bytes in segment XDATA_Z
// 
// 372 bytes of CODE  memory
//   0 bytes of DATA  memory (+ 2 bytes shared)
//   4 bytes of XDATA memory
//
//Errors: none
//Warnings: 2
